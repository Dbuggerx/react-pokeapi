{"version":3,"file":"static/js/792.7001a051.chunk.js","mappings":"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","sources":["features/pokemon-details/thunks.ts","features/pokemon-details/slice.ts","features/pokemon-details/pokemon-details-layout/hooks.ts","features/pokemon-details/pokemon-details-layout/index.tsx","features/pokemon-details/pokemon-info/index.tsx","redux/with-lazy-redux.tsx","features/pokemon-details/pokemon-info/hooks.ts"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport type { RootState } from \"../../redux/store\";\nimport { idFromUrl, speciesUrlSelector } from \"../pokemon-page/service\";\nimport { fetchPokemonInfo } from \"../pokemon-page/thunks\";\nimport type { PokemonDetailsError, PokemonSpecies } from \"./types\";\n\nexport const getPokemonDetails = createAsyncThunk<\n  void,\n  { pokemonName: string },\n  {\n    state: RootState;\n    rejectValue: PokemonDetailsError;\n  }\n>(\n  \"pokemonDetails/getPokemonDetails\",\n  async (args, { dispatch, getState, signal, rejectWithValue }) => {\n    const pokemonInfo = dispatch(fetchPokemonInfo(args));\n\n    signal.addEventListener(\"abort\", () => {\n      pokemonInfo.abort();\n    });\n\n    await pokemonInfo;\n\n    const {\n      pokemonPage: { info },\n    } = getState();\n\n    const speciesUrl = speciesUrlSelector(info, args.pokemonName);\n    if (!speciesUrl) return rejectWithValue(\"species not found\");\n\n    const pokemonSpecies = dispatch(\n      fetchPokemonSpecies({\n        url: speciesUrl,\n      })\n    );\n\n    signal.addEventListener(\"abort\", () => {\n      pokemonSpecies.abort();\n    });\n  }\n);\n\nexport const fetchPokemonSpecies = createAsyncThunk<\n  PokemonSpecies,\n  { url: string },\n  {\n    state: RootState;\n  }\n>(\n  \"pokemonDetails/fetchPokemonSpecies\",\n  async (args, { signal, rejectWithValue }) => {\n    const response = await fetch(args.url, { signal });\n\n    if (!response.ok) return rejectWithValue(await response.text());\n\n    return await response.json();\n  },\n  {\n    condition: (args, { getState }) => {\n      const speciesIdFromUrl = idFromUrl(args.url);\n\n      if (!speciesIdFromUrl) return true;\n\n      const {\n        pokemonDetails: {\n          species: { data },\n        },\n      } = getState();\n\n      if (data.ids.includes(Number(speciesIdFromUrl))) {\n        return false;\n      }\n    },\n  }\n);\n","import type { EntityState } from \"@reduxjs/toolkit\";\nimport { createSelector } from \"@reduxjs/toolkit\";\nimport { createSlice, createEntityAdapter } from \"@reduxjs/toolkit\";\nimport type { LoadableResource } from \"../../redux/types\";\nimport type { PokemonDetailsError, PokemonSpecies } from \"./types\";\nimport type { RootState } from \"../../redux/store\";\nimport * as thunks from \"./thunks\";\n\nconst pokemonSpeciesEntityAdapter = createEntityAdapter<PokemonSpecies, number>(\n  {\n    selectId: (species) => species.id,\n    sortComparer: (a, b) => (a.order && b.order ? a.order - b.order : 0),\n  }\n);\n\nconst initialState: {\n  error: PokemonDetailsError | undefined;\n  species: LoadableResource<EntityState<PokemonSpecies, number>>;\n} = {\n  error: undefined,\n  species: {\n    loading: true,\n    error: false,\n    data: pokemonSpeciesEntityAdapter.getInitialState(),\n  },\n};\n\nconst slice = createSlice({\n  name: \"pokemonDetails\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(thunks.getPokemonDetails.rejected, (state, action) => {\n        state.error = action.payload;\n      })\n      .addCase(thunks.fetchPokemonSpecies.pending, (state) => {\n        state.error = undefined;\n        state.species.loading = true;\n        state.species.error = false;\n      })\n      .addCase(thunks.fetchPokemonSpecies.rejected, (state, action) => {\n        state.error = undefined;\n        state.species.loading = false;\n        if (action.meta.aborted) return;\n        state.species.error = true;\n      })\n      .addCase(thunks.fetchPokemonSpecies.fulfilled, (state, action) => {\n        state.error = undefined;\n        state.species.loading = false;\n        state.species.error = false;\n\n        pokemonSpeciesEntityAdapter.setOne(state.species.data, action.payload);\n      });\n  },\n});\n\nexport default slice;\n\nexport const actions = { ...slice.actions, ...thunks };\n\nconst pokemonDetailSelector = (state: RootState) => state.pokemonDetails;\nconst pokemonSpeciesSelector = createSelector(\n  pokemonDetailSelector,\n  (state) => state.species\n);\nconst pokemonSpeciesDataSelector = createSelector(\n  pokemonSpeciesSelector,\n  (state) => state.data\n);\n\nexport const selectors = {\n  sliceAvailable: createSelector(pokemonDetailSelector, (state) => !!state),\n  error: createSelector(pokemonDetailSelector, (state) => state.error),\n  species: {\n    ...pokemonSpeciesEntityAdapter.getSelectors(pokemonSpeciesDataSelector),\n    isLoading: createSelector(pokemonSpeciesSelector, (state) => state.loading),\n    isError: createSelector(pokemonSpeciesSelector, (state) => state.error),\n  },\n};\n","import React from \"react\";\n\nexport function useThemeColorEffect(color: string | undefined) {\n  React.useEffect(() => {\n    if (!color) return;\n    const originalAccentColor = getComputedStyle(\n      document.documentElement\n    ).getPropertyValue(\"--accent-color\");\n\n    const originalAccentTextColor = getComputedStyle(\n      document.documentElement\n    ).getPropertyValue(\"--accent-text-color\");\n\n    const originalAccentColorHighlight = getComputedStyle(\n      document.documentElement\n    ).getPropertyValue(\"--accent-color-highlight\");\n\n    switch (color) {\n      case \"black\":\n        document.documentElement.style.setProperty(\"--accent-text-color\", \"white\");\n        document.documentElement.style.setProperty(\"--accent-color\", \"black\");\n        document.documentElement.style.setProperty(\"--accent-color-highlight\", \"grey\");\n        break;\n      case \"blue\":\n        document.documentElement.style.setProperty(\"--accent-color\", \"#3a86ff\");\n        document.documentElement.style.setProperty(\"--accent-color-highlight\", \"#2366D1\");\n        break;\n      case \"brown\":\n        document.documentElement.style.setProperty(\"--accent-color\", \"#a12727\");\n        document.documentElement.style.setProperty(\"--accent-color-highlight\", \"#831313\");\n        break;\n      case \"gray\":\n        document.documentElement.style.setProperty(\"--accent-color\", \"#525252\");\n        document.documentElement.style.setProperty(\"--accent-color-highlight\", \"#362d2d\");\n        break;\n      case \"green\":\n        document.documentElement.style.setProperty(\"--accent-color\", \"#77c360\");\n        document.documentElement.style.setProperty(\"--accent-color-highlight\", \"#498e35\");\n        break;\n      case \"pink\":\n        document.documentElement.style.setProperty(\"--accent-color\", \"#ff8196\");\n        document.documentElement.style.setProperty(\"--accent-color-highlight\", \"#cc4c61\");\n        break;\n      case \"purple\":\n        document.documentElement.style.setProperty(\"--accent-color\", \"#800080\");\n        document.documentElement.style.setProperty(\"--accent-color-highlight\", \"#620b62\");\n        break;\n      case \"red\":\n        document.documentElement.style.setProperty(\"--accent-color\", \"#f53e2a\");\n        document.documentElement.style.setProperty(\"--accent-color-highlight\", \"#b72a1a\");\n        break;\n      case \"white\":\n        document.documentElement.style.setProperty(\"--accent-text-color\", \"black\");\n        document.documentElement.style.setProperty(\"--accent-color\", \"white\");\n        document.documentElement.style.setProperty(\"--accent-color-highlight\", \"grey\");\n        break;\n      case \"yellow\":\n        document.documentElement.style.setProperty(\"--accent-text-color\", \"#695f00\");\n        document.documentElement.style.setProperty(\"--accent-color\", \"#fffb10\");\n        document.documentElement.style.setProperty(\"--accent-color-highlight\", \"#d1cc3e\");\n        break;\n    }\n\n    syncThemeColorWithAccentColor();\n\n    return () => {\n      document.documentElement.style.setProperty(\n        \"--accent-text-color\",\n        originalAccentTextColor\n      );\n      document.documentElement.style.setProperty(\"--accent-color\", originalAccentColor);\n      document.documentElement.style.setProperty(\n        \"--accent-color-highlight\",\n        originalAccentColorHighlight\n      );\n\n      syncThemeColorWithAccentColor();\n    };\n  }, [color]);\n}\n\nfunction syncThemeColorWithAccentColor() {\n  document\n    .querySelector(\"meta[name=theme-color]\")\n    ?.setAttribute(\n      \"content\",\n      getComputedStyle(document.documentElement).getPropertyValue(\"--accent-color\")\n    );\n}\n","import React from \"react\";\nimport { useThemeColorEffect } from \"./hooks\";\nimport \"./style.scss\";\n\ntype Props = {\n  pokemonName: string;\n  pokemonId: number;\n  images: React.ReactElement;\n  color: string | undefined;\n  types: React.ReactElement;\n  descriptionTitle: string | undefined;\n  description: React.ReactElement;\n  profile: React.ReactElement;\n  abilities: React.ReactElement;\n  stats: React.ReactElement;\n  backgroundImageUrl: string | null | undefined;\n};\n\nexport default function PokemonDetailsLayout(props: Props) {\n  useThemeColorEffect(props.color);\n\n  return (\n    <article className=\"pokemon-details\">\n      <article className=\"pokemon-details__content\">\n        <header className=\"pokemon-details__header\">\n          <h1 className=\"pokemon-details__name\">{props.pokemonName}</h1>\n          <aside title=\"Pokemon ID\">#{props.pokemonId}</aside>\n        </header>\n        <section className=\"pokemon-details__images\">{props.images}</section>\n        <section className=\"pokemon-details__types\">{props.types}</section>\n        <section className=\"pokemon-details__description\">\n          <div className=\"pokemon-details__section-title\">\n            {props.descriptionTitle}\n          </div>\n          <div className=\"pokemon-details__descrition-text\">\n            {props.description}\n          </div>\n        </section>\n        <section className=\"pokemon-details__profile\">\n          <div className=\"pokemon-details__section-title\">Profile</div>\n          {props.profile}\n        </section>\n        <section className=\"pokemon-details__abilities\">\n          <div className=\"pokemon-details__section-title\">Abilities</div>\n          {props.abilities}\n        </section>\n        <section className=\"pokemon-details__stats\">\n          <div className=\"pokemon-details__section-title\">Stats</div>\n          {props.stats}\n        </section>\n        <div\n          className=\"pokemon-details__background\"\n          style={{\n            backgroundImage: props.backgroundImageUrl\n              ? `url(${props.backgroundImageUrl})`\n              : undefined,\n          }}\n        ></div>\n      </article>\n    </article>\n  );\n}\n","import { useParams } from \"react-router-dom\";\nimport { usePokemonInfo } from \"./hooks\";\nimport pokemonDetailsSlice from \"../slice\";\nimport withLazyRedux from \"../../../redux/with-lazy-redux\";\nimport ErrorMessage from \"../../../components/error-message\";\nimport LoadingSpinner from \"../../../components/loading-spinner\";\nimport TypePill from \"../../../components/pokemon-type-pill\";\nimport PokemonDetailsLayout from \"../pokemon-details-layout\";\n\nfunction PokemonInfo() {\n  const { pokemonName } = useParams();\n  const {\n    error,\n    isSpeciesLoading,\n    isSpeciesError,\n    images,\n    pokemonInfo,\n    species,\n  } = usePokemonInfo(pokemonName);\n\n  return error === \"species not found\" ? (\n    <ErrorMessage message=\"Not Found!\" />\n  ) : error === \"unexpected error\" || isSpeciesError ? (\n    <ErrorMessage message=\"Error!\" />\n  ) : isSpeciesLoading || pokemonInfo?.loading || !pokemonInfo?.data ? (\n    <LoadingSpinner />\n  ) : (\n    <PokemonDetailsLayout\n      backgroundImageUrl={\n        pokemonInfo?.data?.sprites?.other?.dream_world?.front_default\n      }\n      pokemonName={pokemonInfo.data.name}\n      pokemonId={pokemonInfo.data.id || 0}\n      images={\n        <>\n          {images?.map((e) => (\n            <img src={e[1]} alt={e[0]} key={e[0]} />\n          ))}\n        </>\n      }\n      color={species?.color.name}\n      types={\n        <>\n          {pokemonInfo.data.types?.map((t) => (\n            <TypePill pokemonType={t.type.name} key={t.type.name} />\n          ))}\n        </>\n      }\n      descriptionTitle={\n        species?.genera.find((g) => g.language.name === \"en\")?.genus\n      }\n      description={\n        <>\n          {species &&\n            /*\n             * Unfortunatelly, the API results contain repeated data in \"flavor_text_entries\",\n             * varying sometimes in linebreaks or missing spaces between words.\n             * In the block below I try to remove linebreaks and remove duplications\n             */\n            Array.from(\n              species.flavor_text_entries\n                .filter((i) => i.language.name === \"en\")\n                // Remove linebreaks and invalid chars\n                .map((i) => i.flavor_text.replace(/\\r?\\n|\\r|\\u000c/gm, \" \")) // eslint-disable-line no-control-regex\n                .reduce(\n                  /*\n                   * As the text from the API can sometimes vary by missing spaces,\n                   * I'm using the first 10 chars to differentiate the texts\n                   */\n                  (acc, cur) =>\n                    acc.set(cur.toLowerCase().substring(0, 10), cur),\n                  new Map<string, string>()\n                )\n                .values()\n            ).reduce((acc, cur, index) => {\n              acc.push(\n                <span key={index}>\n                  {acc.length > 0 && <br />}\n                  {cur}\n                </span>\n              );\n              return acc;\n            }, [] as React.ReactElement[])}\n        </>\n      }\n      profile={\n        <ul>\n          {pokemonInfo.data.height ? (\n            <li>Height: {pokemonInfo.data.height / 10}m</li>\n          ) : null}\n          {pokemonInfo.data.weight ? (\n            <li>Weight: {pokemonInfo.data.weight / 10}kg</li>\n          ) : null}\n          {species?.shape.name && <li>Shape: {species?.shape.name}</li>}\n          {species?.habitat?.name && <li>Habitat: {species?.habitat.name}</li>}\n        </ul>\n      }\n      abilities={\n        <ul>\n          {pokemonInfo.data.abilities?.map((a) => (\n            <li\n              key={a.ability.name}\n              title={a.is_hidden ? \"Hidden ability\" : \"Normal ability\"}\n            >\n              {a.ability.name}\n            </li>\n          ))}\n        </ul>\n      }\n      stats={\n        <ul>\n          {pokemonInfo.data.stats?.map((s) => (\n            <li key={s.stat.name}>\n              {s.stat.name}: {s.base_stat}\n            </li>\n          ))}\n        </ul>\n      }\n    />\n  );\n}\n\nexport default withLazyRedux(PokemonInfo, pokemonDetailsSlice);\n","import React from \"react\";\nimport { useInjectReduxSlice } from \"./inject-slice-context\";\nimport type { Slice } from \"@reduxjs/toolkit\";\n\nexport default function withLazyRedux<P extends JSX.IntrinsicAttributes>(\n  Component: React.JSXElementConstructor<P>,\n  slice: Slice\n) {\n  return function LazyRedux(props: P) {\n    const injectSlice = useInjectReduxSlice();\n    const [sliceReady, setSliceReady] = React.useState(false);\n\n    React.useEffect(() => {\n      if (sliceReady) return;\n\n      injectSlice(slice);\n      setSliceReady(true);\n    }, [injectSlice, sliceReady]);\n\n    return sliceReady ? <Component {...props} /> : null;\n  };\n}\n","import React from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../../redux/hooks\";\nimport { actions, selectors as pokemonDetailsSelectors } from \"../slice\";\nimport { selectors as pokemonPageSelectors } from \"../../pokemon-page/slice\";\n\nexport function usePokemonInfo(pokemonName: string | undefined) {\n  const dispatch = useAppDispatch();\n  const error = useAppSelector(pokemonDetailsSelectors.error);\n  const pokemonInfoSelectors = React.useMemo(\n    () => pokemonPageSelectors.makeInfoSelectors(),\n    []\n  );\n  const speciesId = useAppSelector((state) =>\n    pokemonName ? pokemonInfoSelectors.speciesId(state, pokemonName) : undefined\n  );\n  const species = useAppSelector((state) =>\n    speciesId\n      ? pokemonDetailsSelectors.species.selectById(state, speciesId)\n      : undefined\n  );\n\n  const isSpeciesLoading = useAppSelector(\n    pokemonDetailsSelectors.species.isLoading\n  );\n  const isSpeciesError = useAppSelector(\n    pokemonDetailsSelectors.species.isError\n  );\n\n  const pokemonInfo = useAppSelector((state) =>\n    pokemonName\n      ? pokemonInfoSelectors.selectById(state, pokemonName)\n      : undefined\n  );\n\n  const images =\n    pokemonInfo?.data?.sprites &&\n    Object.entries(pokemonInfo.data.sprites).filter(\n      (e) => typeof e[1] === \"string\"\n    );\n\n  React.useEffect(\n    function fetchDetails() {\n      if (!pokemonName) return;\n\n      const promise = dispatch(actions.getPokemonDetails({ pokemonName }));\n\n      return () => {\n        promise.abort();\n      };\n    },\n    [dispatch, pokemonName]\n  );\n\n  return {\n    error,\n    isSpeciesLoading,\n    isSpeciesError,\n    pokemonInfo,\n    images,\n    species,\n  };\n}\n"],"names":["getPokemonDetails","createAsyncThunk","async","args","_ref","dispatch","getState","signal","rejectWithValue","pokemonInfo","fetchPokemonInfo","addEventListener","abort","pokemonPage","info","speciesUrl","speciesUrlSelector","pokemonName","pokemonSpecies","fetchPokemonSpecies","url","_ref2","response","fetch","ok","json","text","condition","_ref3","speciesIdFromUrl","idFromUrl","pokemonDetails","species","data","ids","includes","Number","pokemonSpeciesEntityAdapter","createEntityAdapter","selectId","id","sortComparer","a","b","order","initialState","error","undefined","loading","getInitialState","slice","createSlice","name","reducers","extraReducers","builder","addCase","thunks","rejected","state","action","payload","pending","meta","aborted","fulfilled","setOne","actions","pokemonDetailSelector","pokemonSpeciesSelector","createSelector","pokemonSpeciesDataSelector","selectors","sliceAvailable","getSelectors","isLoading","isError","syncThemeColorWithAccentColor","_document$querySelect","document","querySelector","setAttribute","getComputedStyle","documentElement","getPropertyValue","PokemonDetailsLayout","props","color","React","originalAccentColor","originalAccentTextColor","originalAccentColorHighlight","style","setProperty","_jsx","className","children","_jsxs","title","pokemonId","images","types","descriptionTitle","description","profile","abilities","stats","backgroundImage","backgroundImageUrl","concat","Component","injectSlice","useInjectReduxSlice","sliceReady","setSliceReady","_pokemonInfo$data","_pokemonInfo$data$spr","_pokemonInfo$data$spr2","_pokemonInfo$data$spr3","_pokemonInfo$data$typ","_species$genera$find","_species$habitat","_pokemonInfo$data$abi","_pokemonInfo$data$sta","useParams","isSpeciesLoading","isSpeciesError","useAppDispatch","useAppSelector","pokemonDetailsSelectors","pokemonInfoSelectors","pokemonPageSelectors","makeInfoSelectors","speciesId","selectById","sprites","Object","entries","filter","e","promise","usePokemonInfo","ErrorMessage","message","LoadingSpinner","other","dream_world","front_default","_Fragment","map","src","alt","t","TypePill","pokemonType","type","genera","find","g","language","genus","Array","from","flavor_text_entries","i","flavor_text","replace","reduce","acc","cur","set","toLowerCase","substring","Map","values","index","push","length","height","weight","shape","habitat","is_hidden","ability","s","stat","base_stat","pokemonDetailsSlice"],"sourceRoot":""}