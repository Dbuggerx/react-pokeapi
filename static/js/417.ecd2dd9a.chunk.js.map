{"version":3,"file":"static/js/417.ecd2dd9a.chunk.js","mappings":"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","sources":["features/pokemon-details/thunks.ts","features/pokemon-details/slice.ts","features/pokemon-details/pokemon-details-layout/hooks.ts","features/pokemon-details/pokemon-details-layout/index.tsx","features/pokemon-details/pokemon-info/index.tsx","redux/with-lazy-redux.tsx","features/pokemon-details/pokemon-info/hooks.ts"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport type { RootState } from \"../../redux/store\";\nimport { idFromUrl, speciesUrlSelector } from \"../pokemon-page/service\";\nimport { fetchPokemonInfo } from \"../pokemon-page/thunks\";\nimport type { PokemonDetailsError, PokemonSpecies } from \"./types\";\n\nexport const getPokemonDetails = createAsyncThunk<\n  void,\n  { pokemonName: string },\n  {\n    state: RootState;\n    rejectValue: PokemonDetailsError;\n  }\n>(\n  \"pokemonDetails/getPokemonDetails\",\n  async (args, { dispatch, getState, signal, rejectWithValue }) => {\n    const pokemonInfo = dispatch(fetchPokemonInfo(args));\n\n    signal.addEventListener(\"abort\", () => {\n      pokemonInfo.abort();\n    });\n\n    await pokemonInfo;\n\n    const {\n      pokemonPage: { info },\n    } = getState();\n\n    const speciesUrl = speciesUrlSelector(info, args.pokemonName);\n    if (!speciesUrl) return rejectWithValue(\"species not found\");\n\n    const pokemonSpecies = dispatch(\n      fetchPokemonSpecies({\n        url: speciesUrl,\n      })\n    );\n\n    signal.addEventListener(\"abort\", () => {\n      pokemonSpecies.abort();\n    });\n  }\n);\n\nexport const fetchPokemonSpecies = createAsyncThunk<\n  PokemonSpecies,\n  { url: string },\n  {\n    state: RootState;\n  }\n>(\n  \"pokemonDetails/fetchPokemonSpecies\",\n  async (args, { signal, rejectWithValue }) => {\n    const response = await fetch(args.url, { signal });\n\n    if (!response.ok) return rejectWithValue(await response.text());\n\n    return await response.json();\n  },\n  {\n    condition: (args, { getState }) => {\n      const speciesIdFromUrl = idFromUrl(args.url);\n\n      if (!speciesIdFromUrl) return true;\n\n      const {\n        pokemonDetails: {\n          species: { data },\n        },\n      } = getState();\n\n      if (data.ids.includes(Number(speciesIdFromUrl))) {\n        return false;\n      }\n    },\n  }\n);\n","import type { EntityState } from \"@reduxjs/toolkit\";\nimport { createSelector } from \"@reduxjs/toolkit\";\nimport { createSlice, createEntityAdapter } from \"@reduxjs/toolkit\";\nimport type { LoadableResource } from \"../../redux/types\";\nimport type { PokemonDetailsError, PokemonSpecies } from \"./types\";\nimport type { RootState } from \"../../redux/store\";\nimport * as thunks from \"./thunks\";\n\nconst pokemonSpeciesEntityAdapter = createEntityAdapter<PokemonSpecies>({\n  selectId: (species) => species.id,\n  sortComparer: (a, b) => (a.order && b.order ? a.order - b.order : 0),\n});\n\nconst initialState: {\n  error: PokemonDetailsError | undefined;\n  species: LoadableResource<EntityState<PokemonSpecies>>;\n} = {\n  error: undefined,\n  species: {\n    loading: true,\n    error: false,\n    data: pokemonSpeciesEntityAdapter.getInitialState(),\n  },\n};\n\nconst slice = createSlice({\n  name: \"pokemonDetails\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(thunks.getPokemonDetails.rejected, (state, action) => {\n        state.error = action.payload;\n      })\n      .addCase(thunks.fetchPokemonSpecies.pending, (state) => {\n        state.error = undefined;\n        state.species.loading = true;\n        state.species.error = false;\n      })\n      .addCase(thunks.fetchPokemonSpecies.rejected, (state, action) => {\n        state.error = undefined;\n        state.species.loading = false;\n        if (action.meta.aborted) return;\n        state.species.error = true;\n      })\n      .addCase(thunks.fetchPokemonSpecies.fulfilled, (state, action) => {\n        state.error = undefined;\n        state.species.loading = false;\n        state.species.error = false;\n\n        pokemonSpeciesEntityAdapter.setOne(state.species.data, action.payload);\n      });\n  },\n});\n\nexport default slice;\n\nexport const actions = { ...slice.actions, ...thunks };\n\nconst pokemonDetailSelector = (state: RootState) => state.pokemonDetails;\nconst pokemonSpeciesSelector = createSelector(\n  pokemonDetailSelector,\n  (state) => state.species\n);\nconst pokemonSpeciesDataSelector = createSelector(\n  pokemonSpeciesSelector,\n  (state) => state.data\n);\n\nexport const selectors = {\n  sliceAvailable: createSelector(pokemonDetailSelector, (state) => !!state),\n  error: createSelector(pokemonDetailSelector, (state) => state.error),\n  species: {\n    ...pokemonSpeciesEntityAdapter.getSelectors(pokemonSpeciesDataSelector),\n    isLoading: createSelector(pokemonSpeciesSelector, (state) => state.loading),\n    isError: createSelector(pokemonSpeciesSelector, (state) => state.error),\n  },\n};\n","import React from \"react\";\n\nexport function useThemeColorEffect(color: string | undefined) {\n  React.useEffect(() => {\n    if (!color) return;\n    const originalAccentColor = getComputedStyle(\n      document.documentElement\n    ).getPropertyValue(\"--accent-color\");\n\n    const originalAccentTextColor = getComputedStyle(\n      document.documentElement\n    ).getPropertyValue(\"--accent-text-color\");\n\n    const originalAccentColorHighlight = getComputedStyle(\n      document.documentElement\n    ).getPropertyValue(\"--accent-color-highlight\");\n\n    switch (color) {\n      case \"black\":\n        document.documentElement.style.setProperty(\"--accent-text-color\", \"white\");\n        document.documentElement.style.setProperty(\"--accent-color\", \"black\");\n        document.documentElement.style.setProperty(\"--accent-color-highlight\", \"grey\");\n        break;\n      case \"blue\":\n        document.documentElement.style.setProperty(\"--accent-color\", \"#3a86ff\");\n        document.documentElement.style.setProperty(\"--accent-color-highlight\", \"#2366D1\");\n        break;\n      case \"brown\":\n        document.documentElement.style.setProperty(\"--accent-color\", \"#a12727\");\n        document.documentElement.style.setProperty(\"--accent-color-highlight\", \"#831313\");\n        break;\n      case \"gray\":\n        document.documentElement.style.setProperty(\"--accent-color\", \"#525252\");\n        document.documentElement.style.setProperty(\"--accent-color-highlight\", \"#362d2d\");\n        break;\n      case \"green\":\n        document.documentElement.style.setProperty(\"--accent-color\", \"#77c360\");\n        document.documentElement.style.setProperty(\"--accent-color-highlight\", \"#498e35\");\n        break;\n      case \"pink\":\n        document.documentElement.style.setProperty(\"--accent-color\", \"#ff8196\");\n        document.documentElement.style.setProperty(\"--accent-color-highlight\", \"#cc4c61\");\n        break;\n      case \"purple\":\n        document.documentElement.style.setProperty(\"--accent-color\", \"#800080\");\n        document.documentElement.style.setProperty(\"--accent-color-highlight\", \"#620b62\");\n        break;\n      case \"red\":\n        document.documentElement.style.setProperty(\"--accent-color\", \"#f53e2a\");\n        document.documentElement.style.setProperty(\"--accent-color-highlight\", \"#b72a1a\");\n        break;\n      case \"white\":\n        document.documentElement.style.setProperty(\"--accent-text-color\", \"black\");\n        document.documentElement.style.setProperty(\"--accent-color\", \"white\");\n        document.documentElement.style.setProperty(\"--accent-color-highlight\", \"grey\");\n        break;\n      case \"yellow\":\n        document.documentElement.style.setProperty(\"--accent-text-color\", \"#695f00\");\n        document.documentElement.style.setProperty(\"--accent-color\", \"#fffb10\");\n        document.documentElement.style.setProperty(\"--accent-color-highlight\", \"#d1cc3e\");\n        break;\n    }\n\n    syncThemeColorWithAccentColor();\n\n    return () => {\n      document.documentElement.style.setProperty(\n        \"--accent-text-color\",\n        originalAccentTextColor\n      );\n      document.documentElement.style.setProperty(\"--accent-color\", originalAccentColor);\n      document.documentElement.style.setProperty(\n        \"--accent-color-highlight\",\n        originalAccentColorHighlight\n      );\n\n      syncThemeColorWithAccentColor();\n    };\n  }, [color]);\n}\n\nfunction syncThemeColorWithAccentColor() {\n  document\n    .querySelector(\"meta[name=theme-color]\")\n    ?.setAttribute(\n      \"content\",\n      getComputedStyle(document.documentElement).getPropertyValue(\"--accent-color\")\n    );\n}\n","import React from \"react\";\nimport { useThemeColorEffect } from \"./hooks\";\nimport \"./style.scss\";\n\ntype Props = {\n  pokemonName: string;\n  pokemonId: number;\n  images: React.ReactElement;\n  color: string | undefined;\n  types: React.ReactElement;\n  descriptionTitle: string | undefined;\n  description: React.ReactElement;\n  profile: React.ReactElement;\n  abilities: React.ReactElement;\n  stats: React.ReactElement;\n  backgroundImageUrl: string | null | undefined;\n};\n\nexport default function PokemonDetailsLayout(props: Props) {\n  useThemeColorEffect(props.color);\n\n  return (\n    <article className=\"pokemon-details\">\n      <article className=\"pokemon-details__content\">\n        <header className=\"pokemon-details__header\">\n          <h1 className=\"pokemon-details__name\">{props.pokemonName}</h1>\n          <aside title=\"Pokemon ID\">#{props.pokemonId}</aside>\n        </header>\n        <section className=\"pokemon-details__images\">{props.images}</section>\n        <section className=\"pokemon-details__types\">{props.types}</section>\n        <section className=\"pokemon-details__description\">\n          <div className=\"pokemon-details__section-title\">\n            {props.descriptionTitle}\n          </div>\n          <div className=\"pokemon-details__descrition-text\">\n            {props.description}\n          </div>\n        </section>\n        <section className=\"pokemon-details__profile\">\n          <div className=\"pokemon-details__section-title\">Profile</div>\n          {props.profile}\n        </section>\n        <section className=\"pokemon-details__abilities\">\n          <div className=\"pokemon-details__section-title\">Abilities</div>\n          {props.abilities}\n        </section>\n        <section className=\"pokemon-details__stats\">\n          <div className=\"pokemon-details__section-title\">Stats</div>\n          {props.stats}\n        </section>\n        <div\n          className=\"pokemon-details__background\"\n          style={{ backgroundImage: `url(${props.backgroundImageUrl})` }}\n        ></div>\n      </article>\n    </article>\n  );\n}\n","import { useParams } from \"react-router-dom\";\nimport { usePokemonInfo } from \"./hooks\";\nimport pokemonDetailsSlice, {\n  selectors as pokemonDetailsSelectors,\n} from \"../slice\";\nimport withLazyRedux from \"../../../redux/with-lazy-redux\";\nimport ErrorMessage from \"../../../components/error-message\";\nimport LoadingSpinner from \"../../../components/loading-spinner\";\nimport TypePill from \"../../../components/pokemon-type-pill\";\nimport PokemonDetailsLayout from \"../pokemon-details-layout\";\n\nfunction PokemonInfo() {\n  const { pokemonName } = useParams();\n  const {\n    error,\n    isSpeciesLoading,\n    isSpeciesError,\n    images,\n    pokemonInfo,\n    species,\n  } = usePokemonInfo(pokemonName);\n\n  return error === \"species not found\" ? (\n    <ErrorMessage message=\"Not Found!\" />\n  ) : error === \"unexpected error\" || isSpeciesError ? (\n    <ErrorMessage message=\"Error!\" />\n  ) : isSpeciesLoading || !pokemonInfo?.data ? (\n    <LoadingSpinner />\n  ) : (\n    <PokemonDetailsLayout\n      backgroundImageUrl={\n        pokemonInfo?.data?.sprites?.other?.dream_world?.front_default\n      }\n      pokemonName={pokemonInfo.data.name}\n      pokemonId={pokemonInfo.data.id || 0}\n      images={\n        <>\n          {images?.map((e) => (\n            <img src={e[1]} alt={e[0]} key={e[0]} />\n          ))}\n        </>\n      }\n      color={species?.color.name}\n      types={\n        <>\n          {pokemonInfo.data.types?.map((t) => (\n            <TypePill pokemonType={t.type.name} key={t.type.name} />\n          ))}\n        </>\n      }\n      descriptionTitle={\n        species?.genera.find((g) => g.language.name === \"en\")?.genus\n      }\n      description={\n        <>\n          {species &&\n            /*\n             * Unfortunatelly, the API results contain repeated data in \"flavor_text_entries\",\n             * varying sometimes in linebreaks or missing spaces between words.\n             * In the block below I try to remove linebreaks and remove duplications\n             */\n            Array.from(\n              species.flavor_text_entries\n                .filter((i) => i.language.name === \"en\")\n                // Remove linebreaks and invalid chars\n                .map((i) => i.flavor_text.replace(/\\r?\\n|\\r|\\u000c/gm, \" \")) // eslint-disable-line no-control-regex\n                .reduce(\n                  /*\n                   * As the text from the API can sometimes vary by missing spaces,\n                   * I'm using the first 10 chars to differentiate the texts\n                   */\n                  (acc, cur) =>\n                    acc.set(cur.toLowerCase().substring(0, 10), cur),\n                  new Map<string, string>()\n                )\n                .values()\n            ).reduce((acc, cur, index) => {\n              acc.push(\n                <span key={index}>\n                  {acc.length > 0 && <br />}\n                  {cur}\n                </span>\n              );\n              return acc;\n            }, [] as React.ReactElement[])}\n        </>\n      }\n      profile={\n        <ul>\n          {pokemonInfo.data.height ? (\n            <li>Height: {pokemonInfo.data.height / 10}m</li>\n          ) : null}\n          {pokemonInfo.data.weight ? (\n            <li>Weight: {pokemonInfo.data.weight / 10}kg</li>\n          ) : null}\n          {species?.shape.name && <li>Shape: {species?.shape.name}</li>}\n          {species?.habitat?.name && <li>Habitat: {species?.habitat.name}</li>}\n        </ul>\n      }\n      abilities={\n        <ul>\n          {pokemonInfo.data.abilities?.map((a) => (\n            <li\n              key={a.ability.name}\n              title={a.is_hidden ? \"Hidden ability\" : \"Normal ability\"}\n            >\n              {a.ability.name}\n            </li>\n          ))}\n        </ul>\n      }\n      stats={\n        <ul>\n          {pokemonInfo.data.stats?.map((s) => (\n            <li key={s.stat.name}>\n              {s.stat.name}: {s.base_stat}\n            </li>\n          ))}\n        </ul>\n      }\n    />\n  );\n}\n\nexport default withLazyRedux(\n  PokemonInfo,\n  pokemonDetailsSlice,\n  pokemonDetailsSelectors.sliceAvailable\n);\n","import React from \"react\";\nimport type { Slice } from \"@reduxjs/toolkit\";\nimport { useAppSelector } from \"./hooks\";\nimport { useInjectReduxSlice } from \"./inject-slice-context\";\nimport type { RootState } from \"./store\";\n\nexport default function withLazyRedux<P>(\n  Component: React.JSXElementConstructor<P>,\n  slice: Slice,\n  sliceReadySelector: (reduxState: RootState) => boolean\n) {\n  return function LazyRedux(props: P) {\n    const sliceReady = useAppSelector(sliceReadySelector);\n    const injectSlice = useInjectReduxSlice();\n\n    React.useEffect(() => {\n      if (!sliceReady) injectSlice(slice);\n    }, [injectSlice, sliceReady]);\n\n    return sliceReady ? <Component {...props} /> : null;\n  };\n}\n","import React from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../../redux/hooks\";\nimport { actions, selectors as pokemonDetailsSelectors } from \"../slice\";\nimport { selectors as pokemonPageSelectors } from \"../../pokemon-page/slice\";\n\nexport function usePokemonInfo(pokemonName: string | undefined) {\n  const dispatch = useAppDispatch();\n  const error = useAppSelector(pokemonDetailsSelectors.error);\n  const pokemonInfoSelectors = React.useMemo(\n    () => pokemonPageSelectors.makeInfoSelectors(),\n    []\n  );\n  const speciesId = useAppSelector((state) =>\n    pokemonName ? pokemonInfoSelectors.speciesId(state, pokemonName) : undefined\n  );\n  const species = useAppSelector((state) =>\n    speciesId\n      ? pokemonDetailsSelectors.species.selectById(state, speciesId)\n      : undefined\n  );\n\n  const isSpeciesLoading = useAppSelector(\n    pokemonDetailsSelectors.species.isLoading\n  );\n  const isSpeciesError = useAppSelector(\n    pokemonDetailsSelectors.species.isError\n  );\n\n  const pokemonInfo = useAppSelector((state) =>\n    pokemonName\n      ? pokemonInfoSelectors.selectById(state, pokemonName)\n      : undefined\n  );\n\n  const images =\n    pokemonInfo?.data?.sprites &&\n    Object.entries(pokemonInfo.data.sprites).filter(\n      (e) => typeof e[1] === \"string\"\n    );\n\n  React.useEffect(\n    function fetchDetails() {\n      if (!pokemonName) return;\n\n      const promise = dispatch(actions.getPokemonDetails({ pokemonName }));\n\n      return () => {\n        promise.abort();\n      };\n    },\n    [dispatch, pokemonName]\n  );\n\n  return {\n    error,\n    isSpeciesLoading,\n    isSpeciesError,\n    pokemonInfo,\n    images,\n    species,\n  };\n}\n"],"names":["getPokemonDetails","createAsyncThunk","args","dispatch","getState","signal","rejectWithValue","pokemonInfo","fetchPokemonInfo","addEventListener","abort","info","pokemonPage","speciesUrl","speciesUrlSelector","pokemonName","pokemonSpecies","fetchPokemonSpecies","url","fetch","response","ok","text","json","condition","speciesIdFromUrl","idFromUrl","pokemonDetails","species","data","ids","includes","Number","pokemonSpeciesEntityAdapter","createEntityAdapter","selectId","id","sortComparer","a","b","order","initialState","error","undefined","loading","getInitialState","slice","createSlice","name","reducers","extraReducers","builder","addCase","thunks","state","action","payload","meta","aborted","setOne","actions","pokemonDetailSelector","pokemonSpeciesSelector","createSelector","pokemonSpeciesDataSelector","selectors","sliceAvailable","getSelectors","isLoading","isError","syncThemeColorWithAccentColor","document","querySelector","setAttribute","getComputedStyle","documentElement","getPropertyValue","PokemonDetailsLayout","props","color","React","originalAccentColor","originalAccentTextColor","originalAccentColorHighlight","style","setProperty","className","title","pokemonId","images","types","descriptionTitle","description","profile","abilities","stats","backgroundImage","backgroundImageUrl","Component","sliceReadySelector","sliceReady","useAppSelector","injectSlice","useInjectReduxSlice","useAppDispatch","pokemonDetailsSelectors","pokemonInfoSelectors","pokemonPageSelectors","speciesId","isSpeciesLoading","isSpeciesError","selectById","sprites","Object","entries","filter","e","promise","usePokemonInfo","useParams","message","other","dream_world","front_default","map","src","alt","t","pokemonType","type","genera","find","g","language","genus","Array","from","flavor_text_entries","i","flavor_text","replace","reduce","acc","cur","set","toLowerCase","substring","Map","values","index","push","length","height","weight","shape","habitat","is_hidden","ability","s","stat","base_stat","pokemonDetailsSlice"],"sourceRoot":""}