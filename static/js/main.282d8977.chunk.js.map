{"version":3,"sources":["../.yarn/cache/pokemon-npm-2.0.2-d503758584-d8f7f1b948.zip/node_modules/pokemon/data sync /^/.//.*/.json$","redux/pokemonPage/slice.ts","redux/errors.ts","redux/pokemonPage/epics.ts","redux/pokemonPage/index.ts","redux/pokemonData/slice.ts","redux/pokemonData/epics.ts","redux/pokemonData/index.ts","structures/trie.ts","redux/filteredPokemonNames/slice.ts","redux/filteredPokemonNames/index.ts","redux/rootReducer.ts","redux/rootEpic.ts","redux/observableFetch.ts","components/PokemonDetailsLayout/hooks.ts","components/PokemonDetailsLayout/index.tsx","components/PokemonTypePill/index.tsx","components/ErrorMessage/index.tsx","components/LoadingSpinner/index.tsx","components/ResourceState/index.tsx","redux/types.ts","containers/PokemonDetails/index.tsx","hooks/pokemonData.ts","components/CardLayout/index.tsx","components/Footer/index.tsx","components/Pagination/index.tsx","components/PokemonCard/index.tsx","routeManager.ts","containers/PokemonList/index.tsx","hooks/pokemonPage.ts","components/PokemonNameSearch/index.tsx","containers/Search/index.tsx","hooks/filteredPokemonNames.ts","components/Header/index.tsx","App.tsx","index.tsx","redux/store.ts"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","initialState","loading","error","undefined","pageCount","currentPage","data","details","createSlice","name","reducers","fetchPage","state","action","pageFetched","payload","page","Math","ceil","count","size","offset","setError","fetchDetails","setDetailsError","pokemonName","detailsFetched","ApiError","constructor","response","super","status","toString","combineEpics","action$","state$","observableFetch","pipe","filter","actions","match","switchMap","urlData","url","urlObj","URL","parseInt","searchParams","get","getUrlDataByAddress","mergeMap","json","Observable","subscriber","next","results","result","catchError","of","message","toLowerCase","jsonResult","slice","species","fetchData","dataFetched","clearData","fetchSpecies","speciesFetched","setSpeciesError","Trie","val","children","isWord","this","insert","word","curr","char","remove","stack","child","push","pop","length","parent","searchNode","search","partial","startsWith","prefix","getAllWords","node","autocomplete","indexedNames","pokemon","all","reduce","acc","cur","suggestions","updateSuggestions","Array","from","sort","combineReducers","pokemonPage","pokemonData","filteredPokemonNames","epics","pokemonPageEpic","pokemonDataEpic","rootEpic","store$","dependencies","source","console","args","fromFetch","apply","ok","throwError","syncThemeColorWithAccentColor","document","querySelector","setAttribute","getComputedStyle","documentElement","getPropertyValue","PokemonDetailsLayout","props","color","React","useEffect","originalAccentColor","originalAccentTextColor","originalAccentColorHighlight","style","setProperty","className","title","pokemonId","images","types","descriptionTitle","description","profile","abilities","stats","backgroundImage","backgroundImageUrl","PokemonTypePill","pokemonType","compact","icon","classModifier","faFistRaised","faDove","faSkullCrossbones","faMountain","faGem","faBug","faGhost","faDumbbell","faFire","faTint","faSeedling","faBolt","faHatWizard","faIcicles","faDragon","faCircle","faMagic","faQuestionCircle","faMehBlank","faDotCircle","ErrorMessage","data-testid","faExclamationCircle","LoadingSpinner","faSpinner","ResourceState","useTypedSelector","useSelector","PokemonDetails","dispatch","useDispatch","useParams","hooks","entries","sprites","other","dream_world","front_default","src","alt","key","t","type","genera","find","g","language","genus","flavor_text_entries","i","flavor_text","replace","set","substring","Map","values","index","height","weight","shape","habitat","a","ability","is_hidden","s","stat","base_stat","CardLayout","Children","Footer","href","target","rel","Pagination","onClick","onPrev","faChevronRight","onNext","PokemonImage","imageSrc","PokemonNameSvgShape","display","d","PokemonCard","viewBox","textAnchor","xlinkHref","startOffset","listRoute","pokemonRoute","path","generate","params","generatePath","PokemonListContainer","pageState","pokemonDataActions","goToDetails","history","useHistory","changePage","fetchPrevPage","previous","fetchNextPage","r","PokemonNameSearch","onSubmit","evt","onChoose","preventDefault","list","placeholder","value","selectedName","onChange","onType","Search","useCallback","filterParam","changeRoute","filterState","trim","Header","routes","to","faArrowLeft","App","component","PokemonList","exact","rootElement","getElementById","render","basename","process","store","preloadedState","disableMiddlewares","epicMiddleware","createEpicMiddleware","middlewares","configureStore","reducer","rootReducer","middleware","run","buildStore"],"mappings":"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","file":"static/js/main.282d8977.chunk.js","sourcesContent":["var map = {\n\t\"./de.json\": 72,\n\t\"./en.json\": 53,\n\t\"./fr.json\": 73,\n\t\"./ja.json\": 74,\n\t\"./ko.json\": 75,\n\t\"./ru.json\": 76,\n\t\"./zh-hans.json\": 77,\n\t\"./zh-hant.json\": 78\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 71;","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport type { INamedApiResourceList, IPokemon } from \"pokeapi-typescript\";\nimport type { LoadableResource } from \"../types\";\n\nexport type InitialState = LoadableResource<INamedApiResourceList<IPokemon>> & {\n  pageCount: number;\n  currentPage: number;\n  details: { [key: string]: LoadableResource<IPokemon> | undefined };\n};\n\nconst initialState: InitialState = {\n  loading: false,\n  error: undefined as string | undefined,\n  pageCount: 0,\n  currentPage: 0,\n  data: undefined,\n  details: {},\n};\n\nexport default createSlice({\n  name: \"pokemonPage\",\n  initialState,\n  reducers: {\n    fetchPage: (\n      state,\n      action: PayloadAction<{ size: number; offset: number } | { url: string }>\n    ) => {\n      state.loading = true;\n      state.data = undefined;\n      state.error = undefined;\n      state.details = {};\n    },\n    pageFetched: (\n      state,\n      action: PayloadAction<{\n        page: INamedApiResourceList<IPokemon>;\n        size: number;\n        offset: number;\n      }>\n    ) => {\n      state.loading = false;\n      state.data = action.payload.page;\n      state.pageCount = Math.ceil(action.payload.page.count / action.payload.size);\n      state.currentPage =\n        state.pageCount -\n        Math.ceil(\n          (action.payload.page.count - action.payload.offset) / action.payload.size\n        ) +\n        1;\n    },\n    setError: (state, action: PayloadAction<string>) => {\n      state.error = action.payload;\n    },\n    fetchDetails: (state, action: PayloadAction<string>) => {\n      state.details[action.payload] = {\n        loading: true,\n        error: undefined,\n        data: undefined,\n      };\n    },\n    setDetailsError: (\n      state,\n      action: PayloadAction<{ pokemonName: string; error: string }>\n    ) => {\n      state.details[action.payload.pokemonName] = {\n        loading: false,\n        error: action.payload.error,\n        data: undefined,\n      };\n    },\n    detailsFetched: (\n      state,\n      action: PayloadAction<{ pokemonName: string; data: IPokemon }>\n    ) => {\n      state.details[action.payload.pokemonName] = {\n        loading: false,\n        error: undefined,\n        data: action.payload.data,\n      };\n    },\n  },\n});\n","export class ApiError extends Error {\n  constructor(response: Response) {\n    super(response.status.toString());\n  }\n}\n","import type { INamedApiResourceList, IPokemon } from \"pokeapi-typescript\";\nimport { combineEpics } from \"redux-observable\";\nimport { Observable, of } from \"rxjs\";\nimport { catchError, filter, map, mergeMap, switchMap } from \"rxjs/operators\";\nimport { ApiError } from \"../errors\";\nimport type { TypedEpic } from \"../types\";\nimport { actions } from \"./index\";\n\nconst getUrlDataByAddress = (url: string) => {\n  const urlObj = new URL(url);\n  return {\n    url,\n    size: parseInt(urlObj.searchParams.get(\"limit\")!, 10),\n    offset: parseInt(urlObj.searchParams.get(\"offset\")!, 10)\n  };\n};\n\nconst getDefaultUrlData = (offset: number, size: number) => ({\n  url: `https://pokeapi.co/api/v2/pokemon?offset=${offset}&limit=${size}`,\n  size,\n  offset\n});\n\nconst fetchPageEpic: TypedEpic = (action$, state$, { observableFetch }) => {\n  return action$.pipe(\n    filter(actions.fetchPage.match),\n    switchMap(action => {\n      const urlData =\n        \"url\" in action.payload\n          ? getUrlDataByAddress(action.payload.url)\n          : getDefaultUrlData(action.payload.offset, action.payload.size);\n\n      return observableFetch<INamedApiResourceList<IPokemon>>(urlData.url).pipe(\n        mergeMap(\n          json =>\n            new Observable<\n              | ReturnType<typeof actions.pageFetched>\n              | ReturnType<typeof actions.fetchDetails>\n            >(subscriber => {\n              subscriber.next(\n                actions.pageFetched({\n                  page: json,\n                  size: urlData.size,\n                  offset: urlData.offset\n                })\n              );\n\n              for (const result of json.results) {\n                subscriber.next(actions.fetchDetails(result.name));\n              }\n            })\n        ),\n        catchError(error =>\n          of(\n            actions.setError(\n              error instanceof ApiError && error.message === \"404\"\n                ? \"Nothing found\"\n                : error.message || error\n            )\n          )\n        )\n      );\n    })\n  );\n};\n\nconst fetchPokemonDetailsEpic: TypedEpic = (\n  action$,\n  state$,\n  { observableFetch }\n) => {\n  return action$.pipe(\n    filter(actions.fetchDetails.match),\n    mergeMap(action => {\n      const url = `https://pokeapi.co/api/v2/pokemon/${action.payload.toLowerCase()}/`;\n\n      return observableFetch<IPokemon>(url).pipe(\n        map(jsonResult =>\n          actions.detailsFetched({\n            pokemonName: action.payload,\n            data: jsonResult\n          })\n        ),\n        catchError(error =>\n          of(\n            actions.setDetailsError({\n              pokemonName: action.payload,\n              error:\n                error instanceof ApiError && error.message === \"404\"\n                  ? \"Nothing found\"\n                  : error.message || error\n            })\n          )\n        )\n      );\n    })\n  );\n};\n\nexport default combineEpics(fetchPageEpic, fetchPokemonDetailsEpic);\n","import slice from \"./slice\";\nexport const actions = slice.actions;\nexport default slice.reducer;\nexport { default as epics } from \"./epics\";\n\nexport type State = ReturnType<typeof slice[\"reducer\"]>;\nexport type Actions = typeof slice[\"actions\"];\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport type { IPokemon, IPokemonSpecies } from \"pokeapi-typescript\";\nimport type { LoadableResource } from \"../types\";\n\ntype State = LoadableResource<IPokemon> & {\n  species: LoadableResource<IPokemonSpecies>;\n};\n\nexport default createSlice({\n  name: \"pokemonData\",\n  initialState: {\n    loading: false,\n    error: undefined,\n    data: undefined,\n    species: {\n      loading: false,\n      error: undefined,\n      data: undefined\n    }\n  } as State,\n  reducers: {\n    fetchData: (\n      state,\n      action: PayloadAction<{ url: string } | { name: string }>\n    ) => ({\n      loading: true,\n      error: undefined,\n      data: undefined,\n      species: {\n        loading: false,\n        error: undefined,\n        data: undefined\n      }\n    }),\n    dataFetched: (state, action: PayloadAction<IPokemon>) => {\n      state.loading = false;\n      state.error = undefined;\n      state.data = action.payload;\n    },\n    setError: (state, action: PayloadAction<string>) => {\n      state.loading = false;\n      state.error = action.payload;\n      state.data = undefined;\n    },\n    clearData: () => ({\n      loading: false,\n      data: undefined,\n      error: undefined,\n      species: {\n        loading: false,\n        error: undefined,\n        data: undefined\n      }\n    }),\n    fetchSpecies: (state, action: PayloadAction<string>) => {\n      state.species = {\n        loading: true,\n        error: undefined,\n        data: undefined\n      };\n    },\n    speciesFetched: (state, action: PayloadAction<IPokemonSpecies>) => {\n      state.species = {\n        loading: false,\n        error: undefined,\n        data: action.payload\n      };\n    },\n    setSpeciesError: (state, action: PayloadAction<string>) => {\n      state.species = {\n        loading: false,\n        error: action.payload,\n        data: undefined\n      };\n    }\n  }\n});\n","import type { AnyAction } from \"@reduxjs/toolkit\";\nimport type { IPokemon, IPokemonSpecies } from \"pokeapi-typescript\";\nimport { combineEpics } from \"redux-observable\";\nimport { Observable, of } from \"rxjs\";\nimport { catchError, filter, map, mergeMap, switchMap } from \"rxjs/operators\";\nimport { ApiError } from \"../errors\";\nimport type { TypedEpic } from \"../types\";\nimport { actions } from \"./index\";\n\nconst fetchPokemonEpic: TypedEpic = (action$, state$, { observableFetch }) => {\n  return action$.pipe(\n    filter(actions.fetchData.match),\n    switchMap(action => {\n      const url =\n        \"url\" in action.payload\n          ? action.payload.url\n          : `https://pokeapi.co/api/v2/pokemon/${action.payload.name.toLowerCase()}/`;\n\n      return observableFetch<IPokemon>(url).pipe(\n        mergeMap(\n          jsonResult =>\n            new Observable<AnyAction>(subscriber => {\n              subscriber.next(actions.dataFetched(jsonResult));\n              subscriber.next(actions.fetchSpecies(jsonResult.species.url));\n            })\n        ),\n        catchError(error =>\n          of(\n            actions.setError(\n              error instanceof ApiError && error.message === \"404\"\n                ? \"Nothing found\"\n                : error.message || error\n            )\n          )\n        )\n      );\n    })\n  );\n};\n\nconst fetchPokemonSpeciesEpic: TypedEpic = (\n  action$,\n  state$,\n  { observableFetch }\n) =>\n  action$.pipe(\n    filter(actions.fetchSpecies.match),\n    switchMap(action =>\n      observableFetch<IPokemonSpecies>(action.payload).pipe(\n        map(jsonResult => actions.speciesFetched(jsonResult)),\n        catchError(error =>\n          of(\n            actions.setSpeciesError(\n              error instanceof ApiError && error.message === \"404\"\n                ? \"Nothing found\"\n                : error.message || error\n            )\n          )\n        )\n      )\n    )\n  );\n\nexport default combineEpics(fetchPokemonEpic, fetchPokemonSpeciesEpic);\n","import slice from \"./slice\";\nexport const actions = slice.actions;\nexport default slice.reducer;\nexport { default as epics } from \"./epics\";\n\nexport type State = ReturnType<typeof slice[\"reducer\"]>;\nexport type Actions = typeof slice[\"actions\"];\n","type Node = {\n  [key: string]: Trie | undefined;\n};\n\n/**\n * @author https://github.com/amejiarosario/dsa.js-data-structures-algorithms-javascript/blob/master/src/data-structures/trees/trie.js\n * @tutorial https://www.geeksforgeeks.org/advantages-trie-data-structure/\n * @tutorial https://practice.geeksforgeeks.org/problems/difference-between-bst-and-tries\n */\nexport default class Trie {\n  val: string | undefined;\n  children: Node;\n  isWord: boolean;\n\n  constructor(val?: string) {\n    this.val = val;\n    this.children = {};\n    this.isWord = false;\n  }\n\n  /**\n   * Insert word into trie and mark last element as such.\n   */\n  insert(word: string) {\n    let curr: Trie = this;\n\n    for (const char of word) {\n      curr.children[char] = curr.children[char] || new Trie(char);\n      curr = curr.children[char]!;\n    }\n\n    curr.isWord = true;\n  }\n\n  /**\n   * Return true if found the word to be removed, otherwise false.\n   * @param word - The word to remove\n   */\n  remove(word: string) {\n    let curr: Trie = this;\n    const stack = [curr];\n\n    // find word and stack path\n    for (const char of word) {\n      const child = curr.children[char];\n      if (!child) return false;\n      curr = child;\n      stack.push(curr);\n    }\n\n    let child = stack.pop();\n    if (child) child.isWord = false;\n\n    // remove non words without children\n    while (stack.length) {\n      const parent = stack.pop();\n      if (child?.val && !child.isWord && Object.keys(child.children).length === 0)\n        delete parent?.children[child.val];\n\n      child = parent;\n    }\n\n    return true;\n  }\n\n  /**\n   * Return last node that matches word or prefix, or false if not found.\n   */\n  searchNode(word: string) {\n    let curr: Trie = this;\n\n    for (const char of word) {\n      const child = curr.children[char];\n      if (!child) return false;\n      curr = child;\n    }\n\n    return curr;\n  }\n\n  /**\n   * Search for complete word (by default) or partial if flag is set.\n   * @param word - Word to search.\n   * @param partial - Whether or not match partial matches.\n   */\n  search(word: string, partial?: boolean) {\n    const curr = this.searchNode(word);\n    if (!curr) return false;\n\n    return partial ? true : curr.isWord;\n  }\n\n  /**\n   * Return true if any word on the trie starts with the given prefix\n   * @param prefix - Partial word to search.\n   */\n  startsWith(prefix: string) {\n    return this.search(prefix, true);\n  }\n\n  /**\n   * Returns all the words from the current `node`.\n   * Uses backtracking.\n   * @param prefix - The prefix to append to each word.\n   * @param node - Current node to start backtracking.\n   */\n  *getAllWords(prefix = \"\", node: Trie = this): IterableIterator<string> {\n    if (!node) return;\n\n    if (node.isWord) yield prefix;\n\n    for (const char of Object.keys(node.children))\n      yield* this.getAllWords(`${prefix}${char}`, node.children[char]);\n  }\n\n  /**\n   * Return a list of words matching the prefix\n   * @param prefix - The prefix to match.\n   */\n  *autocomplete(prefix = \"\"): IterableIterator<string> {\n    const curr = this.searchNode(prefix);\n    if (curr) yield* this.getAllWords(prefix, curr);\n  }\n}\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport pokemon from \"pokemon\";\nimport Trie from \"../../structures/trie\";\n\nconst indexedNames = pokemon.all(\"en\").reduce((acc, cur) => {\n  acc.insert(cur.toLowerCase());\n  return acc;\n}, new Trie());\n\nexport default createSlice({\n  name: \"filteredPokemonNames\",\n  initialState: {\n    name: \"\",\n    suggestions: [] as string[]\n  },\n  reducers: {\n    updateSuggestions: (state, action: PayloadAction<string | undefined>) => {\n      if (action.payload?.length) {\n        state.name = action.payload;\n        state.suggestions = Array.from(\n          indexedNames.autocomplete(action.payload.toLowerCase())\n        ).sort();\n      } else {\n        state.name = \"\";\n        state.suggestions = [];\n      }\n    }\n  }\n});\n","import slice from \"./slice\";\nexport const actions = slice.actions;\nexport default slice.reducer;\n\nexport type State = ReturnType<typeof slice[\"reducer\"]>;\nexport type Actions = typeof slice[\"actions\"];\n","import { combineReducers } from \"redux\";\nimport pokemonPage from \"./pokemonPage\";\nimport pokemonData from \"./pokemonData\";\nimport filteredPokemonNames from \"./filteredPokemonNames\";\n\nexport default combineReducers({\n  pokemonPage,\n  pokemonData,\n  filteredPokemonNames\n});\n","import { combineEpics, Epic } from \"redux-observable\";\nimport type { Observable } from \"rxjs\";\nimport { catchError } from \"rxjs/operators\";\nimport { epics as pokemonDataEpic } from \"./pokemonData\";\nimport { epics as pokemonPageEpic } from \"./pokemonPage\";\n\nconst epics = [pokemonPageEpic, pokemonDataEpic];\n\nconst rootEpic: Epic = (action$, store$, dependencies) =>\n  (combineEpics(...epics)(action$, store$, dependencies) as Observable<\n    unknown\n  >).pipe(\n    catchError((error, source) => {\n      console.error(error);\n      return source;\n    })\n  );\n\nexport default rootEpic;\n","import { fromFetch } from \"rxjs/fetch\";\nimport { switchMap } from \"rxjs/operators\";\nimport { throwError } from \"rxjs\";\nimport { ApiError } from \"./errors\";\n\n/**\n * @typeparam T - The result type\n * @throws ApiError\n */\nconst observableFetch = <T>(...args: Parameters<typeof fromFetch>) =>\n  fromFetch\n    .apply(undefined, args)\n    .pipe(\n      switchMap(response =>\n        !response.ok\n          ? throwError(new ApiError(response))\n          : (response.json() as Promise<T>)\n      )\n    );\n\nexport default observableFetch;\n","import React from \"react\";\n\nexport function useThemeColorEffect(color: string | undefined) {\n  React.useEffect(() => {\n    if (!color) return;\n    const originalAccentColor = getComputedStyle(\n      document.documentElement\n    ).getPropertyValue(\"--accent-color\");\n\n    const originalAccentTextColor = getComputedStyle(\n      document.documentElement\n    ).getPropertyValue(\"--accent-text-color\");\n\n    const originalAccentColorHighlight = getComputedStyle(\n      document.documentElement\n    ).getPropertyValue(\"--accent-color-highlight\");\n\n    switch (color) {\n      case \"black\":\n        document.documentElement.style.setProperty(\"--accent-text-color\", \"white\");\n        document.documentElement.style.setProperty(\"--accent-color\", \"black\");\n        document.documentElement.style.setProperty(\"--accent-color-highlight\", \"grey\");\n        break;\n      case \"blue\":\n        document.documentElement.style.setProperty(\"--accent-color\", \"#3a86ff\");\n        document.documentElement.style.setProperty(\"--accent-color-highlight\", \"#2366D1\");\n        break;\n      case \"brown\":\n        document.documentElement.style.setProperty(\"--accent-color\", \"#a12727\");\n        document.documentElement.style.setProperty(\"--accent-color-highlight\", \"#831313\");\n        break;\n      case \"gray\":\n        document.documentElement.style.setProperty(\"--accent-color\", \"#525252\");\n        document.documentElement.style.setProperty(\"--accent-color-highlight\", \"#362d2d\");\n        break;\n      case \"green\":\n        document.documentElement.style.setProperty(\"--accent-color\", \"#77c360\");\n        document.documentElement.style.setProperty(\"--accent-color-highlight\", \"#498e35\");\n        break;\n      case \"pink\":\n        document.documentElement.style.setProperty(\"--accent-color\", \"#ff8196\");\n        document.documentElement.style.setProperty(\"--accent-color-highlight\", \"#cc4c61\");\n        break;\n      case \"purple\":\n        document.documentElement.style.setProperty(\"--accent-color\", \"#800080\");\n        document.documentElement.style.setProperty(\"--accent-color-highlight\", \"#620b62\");\n        break;\n      case \"red\":\n        document.documentElement.style.setProperty(\"--accent-color\", \"#f53e2a\");\n        document.documentElement.style.setProperty(\"--accent-color-highlight\", \"#b72a1a\");\n        break;\n      case \"white\":\n        document.documentElement.style.setProperty(\"--accent-text-color\", \"black\");\n        document.documentElement.style.setProperty(\"--accent-color\", \"white\");\n        document.documentElement.style.setProperty(\"--accent-color-highlight\", \"grey\");\n        break;\n      case \"yellow\":\n        document.documentElement.style.setProperty(\"--accent-text-color\", \"#695f00\");\n        document.documentElement.style.setProperty(\"--accent-color\", \"#fffb10\");\n        document.documentElement.style.setProperty(\"--accent-color-highlight\", \"#d1cc3e\");\n        break;\n    }\n\n    syncThemeColorWithAccentColor();\n\n    return () => {\n      document.documentElement.style.setProperty(\n        \"--accent-text-color\",\n        originalAccentTextColor\n      );\n      document.documentElement.style.setProperty(\"--accent-color\", originalAccentColor);\n      document.documentElement.style.setProperty(\n        \"--accent-color-highlight\",\n        originalAccentColorHighlight\n      );\n\n      syncThemeColorWithAccentColor();\n    };\n  }, [color]);\n}\n\nfunction syncThemeColorWithAccentColor() {\n  document\n    .querySelector(\"meta[name=theme-color]\")\n    ?.setAttribute(\n      \"content\",\n      getComputedStyle(document.documentElement).getPropertyValue(\"--accent-color\")\n    );\n}\n","import React from \"react\";\nimport { useThemeColorEffect } from \"./hooks\";\nimport \"./style.scss\";\n\ntype Props = {\n  pokemonName: string;\n  pokemonId: number;\n  images: React.ReactElement;\n  color: string | undefined;\n  types: React.ReactElement;\n  descriptionTitle: string | undefined;\n  description: React.ReactElement;\n  profile: React.ReactElement;\n  abilities: React.ReactElement;\n  stats: React.ReactElement;\n  backgroundImageUrl: string | undefined;\n};\n\nexport const PokemonDetailsLayout: React.FC<Props> = props => {\n  useThemeColorEffect(props.color);\n\n  return (\n    <div className=\"pokemon-details\">\n      <article className=\"pokemon-details__content\">\n        <header className=\"pokemon-details__header\">\n          <h1 className=\"pokemon-details__name\">{props.pokemonName}</h1>\n          <aside title=\"Pokemon ID\">#{props.pokemonId}</aside>\n        </header>\n        <section className=\"pokemon-details__images\">{props.images}</section>\n        <section className=\"pokemon-details__types\">{props.types}</section>\n        <section className=\"pokemon-details__description\">\n          <div className=\"pokemon-details__section-title\">\n            {props.descriptionTitle}\n          </div>\n          <div className=\"pokemon-details__descrition-text\">\n            {props.description}\n          </div>\n        </section>\n        <section className=\"pokemon-details__profile\">\n          <div className=\"pokemon-details__section-title\">Profile</div>\n          {props.profile}\n        </section>\n        <section className=\"pokemon-details__abilities\">\n          <div className=\"pokemon-details__section-title\">Abilities</div>\n          {props.abilities}\n        </section>\n        <section className=\"pokemon-details__stats\">\n          <div className=\"pokemon-details__section-title\">Stats</div>\n          {props.stats}\n        </section>\n        <div\n          className=\"pokemon-details__background\"\n          style={{ backgroundImage: `url(${props.backgroundImageUrl})` }}\n        ></div>\n      </article>\n    </div>\n  );\n};\n\nexport default PokemonDetailsLayout;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  IconDefinition,\n  faFistRaised,\n  faDove,\n  faSkullCrossbones,\n  faMountain,\n  faGem,\n  faBug,\n  faGhost,\n  faSeedling,\n  faFire,\n  faTint,\n  faBolt,\n  faDumbbell,\n  faHatWizard,\n  faIcicles,\n  faDragon,\n  faCircle,\n  faMagic,\n  faQuestionCircle,\n  faMehBlank,\n  faDotCircle\n} from \"@fortawesome/free-solid-svg-icons\";\nimport \"./style.scss\";\nimport { FC } from \"react\";\n\ntype Props = {\n  pokemonType: string;\n  compact?: boolean;\n};\n\nconst PokemonTypePill: FC<Props> = ({ pokemonType, compact }) => {\n  let icon: IconDefinition | null = null;\n  let classModifier = \"\";\n\n  switch (pokemonType) {\n    case \"fighting\":\n      icon = faFistRaised;\n      classModifier = \"pokemon-type-pill--fighting\";\n      break;\n    case \"flying\":\n      icon = faDove;\n      classModifier = \"pokemon-type-pill--flying\";\n      break;\n    case \"poison\":\n      icon = faSkullCrossbones;\n      classModifier = \"pokemon-type-pill--poison\";\n      break;\n    case \"ground\":\n      icon = faMountain;\n      classModifier = \"pokemon-type-pill--ground\";\n      break;\n    case \"rock\":\n      icon = faGem;\n      classModifier = \"pokemon-type-pill--rock\";\n      break;\n    case \"bug\":\n      icon = faBug;\n      classModifier = \"pokemon-type-pill--bug\";\n      break;\n    case \"ghost\":\n      icon = faGhost;\n      classModifier = \"pokemon-type-pill--ghost\";\n      break;\n    case \"steel\":\n      icon = faDumbbell;\n      classModifier = \"pokemon-type-pill--steel\";\n      break;\n    case \"fire\":\n      icon = faFire;\n      classModifier = \"pokemon-type-pill--fire\";\n      break;\n    case \"water\":\n      icon = faTint;\n      classModifier = \"pokemon-type-pill--water\";\n      break;\n    case \"grass\":\n      icon = faSeedling;\n      classModifier = \"pokemon-type-pill--grass\";\n      break;\n    case \"electric\":\n      icon = faBolt;\n      classModifier = \"pokemon-type-pill--electric\";\n      break;\n    case \"psychic\":\n      icon = faHatWizard;\n      classModifier = \"pokemon-type-pill--psychic\";\n      break;\n    case \"ice\":\n      icon = faIcicles;\n      classModifier = \"pokemon-type-pill--ice\";\n      break;\n    case \"dragon\":\n      icon = faDragon;\n      classModifier = \"pokemon-type-pill--dragon\";\n      break;\n    case \"dark\":\n      icon = faCircle;\n      classModifier = \"pokemon-type-pill--dark\";\n      break;\n    case \"fairy\":\n      icon = faMagic;\n      classModifier = \"pokemon-type-pill--fairy\";\n      break;\n    case \"unknown\":\n      icon = faQuestionCircle;\n      classModifier = \"pokemon-type-pill--unknown\";\n      break;\n    case \"shadow\":\n      icon = faMehBlank;\n      classModifier = \"pokemon-type-pill--shadow\";\n      break;\n    default:\n      icon = faDotCircle;\n  }\n  return (\n    <div\n      className={`pokemon-type-pill ${\n        compact ? \"pokemon-type-pill--compact\" : \"\"\n      } ${classModifier}`}\n      title={compact ? pokemonType : undefined}\n    >\n      {icon && (\n        <div className=\"pokemon-type-pill__icon\">\n          <FontAwesomeIcon icon={icon} />\n        </div>\n      )}\n      {!compact && pokemonType}\n    </div>\n  );\n};\n\nexport default PokemonTypePill;\n","import { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport \"./style.scss\";\n\nconst ErrorMessage: React.FC<{ message: string }> = ({ message }) => (\n  <div className=\"error-message\" data-testid=\"error\">\n    <FontAwesomeIcon icon={faExclamationCircle} size=\"2x\" />\n    {message}\n  </div>\n);\n\nexport default ErrorMessage;\n","import { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport \"./style.scss\";\n\nconst LoadingSpinner: React.FC = () => (\n  <div className=\"loading-spinner\" data-testid=\"loading\">\n    <FontAwesomeIcon icon={faSpinner} size=\"4x\" />\n  </div>\n);\n\nexport default LoadingSpinner;\n","import React from \"react\";\nimport type { LoadableResource } from \"../../redux/types\";\nimport ErrorMessage from \"../ErrorMessage\";\nimport LoadingSpinner from \"../LoadingSpinner\";\n\nconst ResourceState: React.FC<{\n  state: LoadableResource<unknown> | undefined;\n}> = ({ state }) => {\n  if (!state) return <ErrorMessage message=\"No data\" />;\n  if (state.error) return <ErrorMessage message={state.error} />;\n  if (state.loading) return <LoadingSpinner />;\n  if (!state.data) return <ErrorMessage message=\"No data\" />;\n  return null;\n};\n\nexport default ResourceState;\n","import type { Action, AnyAction } from \"@reduxjs/toolkit\";\nimport { TypedUseSelectorHook, useSelector } from \"react-redux\";\nimport type { Epic } from \"redux-observable\";\nimport type { Observable } from \"rxjs\";\nimport observableFetch from \"./observableFetch\";\nimport rootReducer from \"./rootReducer\";\n\nexport type ObservableFetch<T> = (\n  ...args: Parameters<typeof fetch>\n) => Observable<T>;\n\nexport type AppState = ReturnType<typeof rootReducer>;\n\nexport type EpicDependencies = {\n  observableFetch: typeof observableFetch;\n};\n\n/**\n * @typeparam A - The Action type\n */\nexport type TypedEpic<A extends Action = AnyAction> = Epic<\n  A,\n  A,\n  AppState,\n  EpicDependencies\n>;\n\nexport const useTypedSelector: TypedUseSelectorHook<AppState> = useSelector;\n\nexport type LoadableResource<T> = {\n  loading: boolean;\n  error: string | undefined;\n  data: T | undefined;\n};\n","import React from \"react\";\nimport PokemonDetailsLayout from \"../../components/PokemonDetailsLayout\";\nimport TypePill from \"../../components/PokemonTypePill\";\nimport ResourceState from \"../../components/ResourceState\";\nimport * as hooks from \"../../hooks/pokemonData\";\n\nconst PokemonDetails: React.FC = () => {\n  hooks.usePokemonDataEffect();\n  const pokemonData = hooks.usePokemonDataState();\n\n  const images =\n    pokemonData.data &&\n    Object.entries(pokemonData.data.sprites).filter(\n      e => typeof e[1] === \"string\"\n    );\n\n  return (\n    <>\n      <ResourceState state={pokemonData} />\n      {pokemonData.data && (\n        <PokemonDetailsLayout\n          backgroundImageUrl={\n            // @ts-expect-error - The \"other\" property is unfortunately not typed\n            pokemonData?.data?.sprites.other.dream_world.front_default\n          }\n          pokemonName={pokemonData.data.name}\n          pokemonId={pokemonData.data.id}\n          images={\n            <>\n              {images?.map(e => (\n                <img src={e[1]} alt={e[0]} key={e[0]} />\n              ))}\n            </>\n          }\n          color={pokemonData.species.data?.color.name}\n          types={\n            <>\n              {pokemonData.data.types.map(t => (\n                <TypePill pokemonType={t.type.name} key={t.type.name} />\n              ))}\n            </>\n          }\n          descriptionTitle={\n            pokemonData.species.data?.genera.find(g => g.language.name === \"en\")\n              ?.genus\n          }\n          description={\n            <>\n              {pokemonData.species.data &&\n                /*\n                 * Unfortunatelly, the API results contain repeated data in \"flavor_text_entries\",\n                 * varying sometimes in linebreaks or missing spaces between words.\n                 * In the block below I try to remove linebreaks and remove duplications\n                 */\n                Array.from(\n                  pokemonData.species.data.flavor_text_entries\n                    .filter(i => i.language.name === \"en\")\n                    // Remove linebreaks and invalid chars\n                    .map(i => i.flavor_text.replace(/\\r?\\n|\\r|\\u000c/gm, \" \")) // eslint-disable-line no-control-regex\n                    .reduce(\n                      /*\n                       * As the text from the API can sometimes vary by missing spaces,\n                       * I'm using the first 10 chars to differentiate the texts\n                       */\n                      (acc, cur) =>\n                        acc.set(cur.toLowerCase().substring(0, 10), cur),\n                      new Map<string, string>()\n                    )\n                    .values()\n                ).reduce((acc, cur, index) => {\n                  acc.push(\n                    <span key={index}>\n                      {acc.length > 0 && <br />}\n                      {cur}\n                    </span>\n                  );\n                  return acc;\n                }, [] as React.ReactElement[])}\n            </>\n          }\n          profile={\n            <ul>\n              <li>Height: {pokemonData.data.height / 10}m</li>\n              <li>Weight: {pokemonData.data.weight / 10}kg</li>\n              {pokemonData.species.data?.shape.name && (\n                <li>Shape: {pokemonData.species.data?.shape.name}</li>\n              )}\n              {pokemonData.species.data?.habitat?.name && (\n                <li>Habitat: {pokemonData.species.data?.habitat.name}</li>\n              )}\n            </ul>\n          }\n          abilities={\n            <ul>\n              {pokemonData.data.abilities.map(a => (\n                <li\n                  key={a.ability.name}\n                  title={a.is_hidden ? \"Hidden ability\" : \"Normal ability\"}\n                >\n                  {a.ability.name}\n                </li>\n              ))}\n            </ul>\n          }\n          stats={\n            <ul>\n              {pokemonData.data.stats.map(s => (\n                <li key={s.stat.name}>\n                  {s.stat.name}: {s.base_stat}\n                </li>\n              ))}\n            </ul>\n          }\n        />\n      )}\n    </>\n  );\n};\n\nexport default PokemonDetails;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { actions } from \"../redux/pokemonData\";\nimport { useTypedSelector } from \"../redux/types\";\nimport type { PokemonRouteParams } from \"../routeManager\";\n\nexport function usePokemonDataEffect() {\n  const dispatch = useDispatch();\n  const { pokemonName } = useParams<PokemonRouteParams>();\n\n  React.useEffect(() => {\n    dispatch(\n      actions.fetchData({\n        name: pokemonName.toLowerCase()\n      })\n    );\n  }, [dispatch, pokemonName]);\n}\n\nexport function usePokemonDataState() {\n  return useTypedSelector(state => state.pokemonData);\n}\n","import React from \"react\";\nimport \"./style.scss\";\n\nconst CardLayout: React.FC = ({ children }) => {\n  return (\n    <div className=\"card-layout\">\n      <article className=\"card-layout__content\">\n        {React.Children.map(children, child => (\n          <>{child}</>\n        ))}\n      </article>\n    </div>\n  );\n};\n\nexport default CardLayout;\n","import React from \"react\";\nimport \"./style.scss\";\n\nconst Footer: React.FC = ({ children }) => (\n  <footer className=\"footer\">\n    {children}\n    <a\n      className=\"footer__info\"\n      href=\"https://www.linkedin.com/in/danilocestari\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      Developed by <strong>Danilo Cestari</strong>\n    </a>\n  </footer>\n);\nexport default Footer;\n","import { faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport \"./style.scss\";\n\ntype Props = {\n  currentPage: number;\n  pageCount: number;\n  onPrev: () => void;\n  onNext: () => void;\n};\n\nconst Pagination: React.FC<Props> = props => (\n  <div className=\"pagination\">\n    <div\n      className=\"pagination__button-left\"\n      onClick={props.onPrev}\n      data-testid=\"pagination-button-left\"\n    >\n      <FontAwesomeIcon icon={faChevronRight} size=\"2x\" />\n    </div>\n    <span data-testid=\"pagination-values\">\n      page {props.currentPage} of {props.pageCount}\n    </span>\n    <div\n      className=\"pagination__button-right\"\n      onClick={props.onNext}\n      data-testid=\"pagination-button-right\"\n    >\n      <FontAwesomeIcon icon={faChevronRight} size=\"2x\" />\n    </div>\n  </div>\n);\n\nexport default Pagination;\n","import type { IPokemon } from \"pokeapi-typescript\";\nimport React from \"react\";\nimport type { LoadableResource } from \"../../redux/types\";\nimport TypePill from \"../PokemonTypePill\";\nimport ResourceState from \"../ResourceState\";\nimport \"./style.scss\";\n\ntype Props = {\n  pokemonName: string;\n  details: LoadableResource<IPokemon> | undefined;\n  onClick: () => void;\n};\n\nconst PokemonImage: React.FC<{\n  images: IPokemon[\"sprites\"] | undefined;\n  alt: string;\n}> = ({ images, alt }) => {\n  if (!images) return null;\n  const imageSrc =\n    // @ts-expect-error - The \"other\" property is unfortunately not typed\n    images.other[\"official-artwork\"].front_default;\n  return (\n    imageSrc && (\n      <img\n        src={imageSrc}\n        alt={alt}\n        data-testid=\"pokemon-image\"\n        className=\"pokemon-card__image\"\n      />\n    )\n  );\n};\n\nexport const PokemonNameSvgShape: React.FC = () => (\n  <svg style={{ display: \"none\" }}>\n    <defs>\n      <path\n        id=\"circlePath\"\n        d=\"M 0, 25\n      a 25,25 0 1,1 50,0\"\n      />\n    </defs>\n  </svg>\n);\n\nexport const PokemonCard: React.FC<Props> = props => {\n  const backgroundImageUrl =\n    // @ts-expect-error - The \"other\" property is unfortunately not typed\n    props.details?.data?.sprites.other[\"official-artwork\"].front_default;\n\n  return (\n    <section\n      className=\"pokemon-card\"\n      onClick={props.onClick}\n      data-testid=\"card\"\n    >\n      <svg viewBox=\"0 0 50 50\" className=\"pokemon-card__curved-text\">\n        <text textAnchor=\"middle\">\n          <textPath\n            xlinkHref=\"#circlePath\"\n            startOffset=\"50%\"\n            data-testid=\"pokemon-name\"\n          >\n            {props.pokemonName}\n          </textPath>\n        </text>\n      </svg>\n      <div className=\"pokemon-card__status\">\n        <ResourceState state={props.details} />\n      </div>\n      <PokemonImage\n        images={props.details?.data?.sprites}\n        alt={props.pokemonName}\n      />\n      <div className=\"pokemon-card__types\">\n        {props.details?.data?.types.map(t => (\n          <TypePill compact pokemonType={t.type.name} key={t.type.name} />\n        ))}\n      </div>\n      <div\n        className=\"pokemon-card__background\"\n        style={{ backgroundImage: `url(${backgroundImageUrl})` }}\n      ></div>\n    </section>\n  );\n};\n\nexport default PokemonCard;\n","import { generatePath } from \"react-router\";\n\nexport const listRoute = {\n  path: \"/list\"\n};\n\nexport const pokemonRoute = {\n  path: \"/pokemon/:pokemonName\",\n  generate(params: { pokemonName: string }) {\n    return generatePath(this.path, {\n      ...params\n    });\n  }\n};\n\nexport type PokemonRouteParams = Parameters<typeof pokemonRoute[\"generate\"]>[0];\n","import React from \"react\";\nimport CardLayout from \"../../components/CardLayout\";\nimport Footer from \"../../components/Footer\";\nimport Pagination from \"../../components/Pagination\";\nimport PokemonCard, { PokemonNameSvgShape } from \"../../components/PokemonCard\";\nimport ResourceState from \"../../components/ResourceState\";\nimport * as hooks from \"../../hooks/pokemonPage\";\n\nconst PokemonListContainer: React.FC = () => {\n  hooks.useFetchInitialPageEffect();\n  const state = hooks.usePokemonPageState();\n  const goToDetails = hooks.useGoToDetails();\n  const changePage = hooks.useFetchPage();\n\n  return (\n    <>\n      <ResourceState state={state} />\n      {state.data && (\n        <>\n          <PokemonNameSvgShape />\n          <CardLayout>\n            {state.data.results.map(r => (\n              <PokemonCard\n                key={r.name}\n                pokemonName={r.name}\n                details={state.details[r.name]}\n                onClick={() => {\n                  goToDetails(r.name);\n                }}\n              />\n            ))}\n          </CardLayout>\n        </>\n      )}\n\n      <Footer>\n        <Pagination\n          currentPage={state.currentPage}\n          pageCount={state.pageCount}\n          onPrev={changePage.fetchPrevPage}\n          onNext={changePage.fetchNextPage}\n        />\n      </Footer>\n    </>\n  );\n};\n\nexport default PokemonListContainer;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { actions } from \"../redux/pokemonPage\";\nimport { useHistory } from \"react-router-dom\";\nimport { useTypedSelector } from \"../redux/types\";\nimport { actions as pokemonDataActions } from \"../redux/pokemonData\";\nimport { pokemonRoute } from \"../routeManager\";\n\nexport function useFetchInitialPageEffect() {\n  const dispatch = useDispatch();\n  const pageState = useTypedSelector(state => state.pokemonPage);\n\n  React.useEffect(() => {\n    if (pageState.currentPage === 0)\n      dispatch(\n        actions.fetchPage({\n          offset: 0,\n          size: 20\n        })\n      );\n  }, [dispatch, pageState.currentPage]);\n\n  React.useEffect(() => {\n    dispatch(pokemonDataActions.clearData());\n  }, [dispatch]);\n}\n\nexport function useFetchPage() {\n  const dispatch = useDispatch();\n  const pageState = useTypedSelector(state => state.pokemonPage);\n\n  return {\n    fetchPrevPage: () => {\n      if (pageState.data?.previous)\n        dispatch(\n          actions.fetchPage({\n            url: pageState.data.previous\n          })\n        );\n    },\n    fetchNextPage: () => {\n      if (pageState.data?.next)\n        dispatch(\n          actions.fetchPage({\n            url: pageState.data.next\n          })\n        );\n    }\n  };\n}\n\nexport function usePokemonPageState() {\n  return useTypedSelector(state => state.pokemonPage);\n}\n\nexport function useGoToDetails() {\n  const history = useHistory();\n\n  return (pokemonName: string) => {\n    history.push(pokemonRoute.generate({ pokemonName }));\n  };\n}\n","import React from \"react\";\nimport \"./style.scss\";\n\ntype Props = {\n  selectedName: string;\n  suggestions: string[];\n  onType: (param: string) => void;\n  onChoose: () => void;\n};\n\nconst PokemonNameSearch: React.FC<Props> = props => {\n  return (\n    <form\n      onSubmit={evt => {\n        props.onChoose();\n        evt.preventDefault();\n      }}\n      className=\"search\"\n    >\n      <input\n        type=\"search\"\n        list=\"pokemonNames\"\n        placeholder=\"Search\"\n        value={props.selectedName}\n        onChange={evt => {\n          props.onType(evt.target.value);\n        }}\n        className=\"search__input\"\n      />\n      <datalist id=\"pokemonNames\">\n        {props.suggestions.map(r => (\n          <option key={r} value={r} />\n        ))}\n      </datalist>\n      <button type=\"submit\" className=\"search__button\">\n        Go\n      </button>\n    </form>\n  );\n};\n\nexport default PokemonNameSearch;\n","import React from \"react\";\nimport PokemonNameSearch from \"../../components/PokemonNameSearch\";\nimport * as hooks from \"../../hooks/filteredPokemonNames\";\n\nconst Search: React.FC = () => {\n  hooks.useInitialFilterSuggestionsEffect();\n  const updateSuggestions = hooks.useUpdateSuggestionsCallback();\n  const changeRoute = hooks.useChangeRouteCallback();\n  const filterState = hooks.useFilterState();\n\n  return (\n    <div>\n      <PokemonNameSearch\n        selectedName={filterState.name}\n        suggestions={filterState.suggestions}\n        onType={updateSuggestions}\n        onChoose={changeRoute}\n      />\n    </div>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useTypedSelector } from \"../redux/types\";\nimport { actions } from \"../redux/filteredPokemonNames\";\nimport { pokemonRoute } from \"../routeManager\";\n\nexport function useInitialFilterSuggestionsEffect() {\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    dispatch(actions.updateSuggestions());\n  }, [dispatch]);\n}\n\nexport function useUpdateSuggestionsCallback() {\n  const dispatch = useDispatch();\n\n  return React.useCallback(\n    (filterParam: string) => {\n      dispatch(actions.updateSuggestions(filterParam));\n    },\n    [dispatch]\n  );\n}\n\nexport function useChangeRouteCallback() {\n  const history = useHistory();\n  const filterState = useTypedSelector(state => state.filteredPokemonNames);\n\n  return () => {\n    if (filterState.name.trim().length > 0)\n      history.push(pokemonRoute.generate({ pokemonName: filterState.name }));\n  };\n}\n\nexport function useFilterState() {\n  return useTypedSelector(state => state.filteredPokemonNames);\n}\n","import React from \"react\";\nimport Search from \"../../containers/Search\";\nimport \"./style.scss\";\nimport { Route, Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport * as routes from \"../../routeManager\";\n\nconst Header: React.FC = () => (\n  <header className=\"header\">\n    <a\n      href=\"https://github.com/PokeAPI/pokeapi\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      className=\"header__logo\"\n    >\n      <img\n        src=\"https://raw.githubusercontent.com/PokeAPI/media/master/logo/pokeapi.svg?sanitize=true\"\n        alt=\"PokeAPI\"\n      />\n    </a>\n    <div className=\"header__search\">\n      <Route path={routes.pokemonRoute.path}>\n        <Link to={routes.listRoute.path} title=\"Go back\" className=\"header__back-button\">\n          <FontAwesomeIcon icon={faArrowLeft} size=\"2x\" />\n        </Link>\n      </Route>\n      <Search />\n    </div>\n  </header>\n);\n\nexport default Header;\n","import * as React from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport PokemonDetails from \"./containers/PokemonDetails\";\nimport PokemonList from \"./containers/PokemonList\";\nimport * as routes from \"./routeManager\";\nimport Header from \"./components/Header\";\nimport \"typeface-open-sans\";\nimport \"./styles.css\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route path={routes.pokemonRoute.path} component={PokemonDetails} />\n        <Route path={routes.listRoute.path} component={PokemonList} />\n        <Redirect exact to={routes.listRoute.path} />\n      </Switch>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport buildStore from \"./redux/store\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Provider store={buildStore()}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  rootElement\n);\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { createEpicMiddleware } from \"redux-observable\";\nimport rootReducer from \"./rootReducer\";\nimport rootEpic from \"./rootEpic\";\nimport observableFetch from \"./observableFetch\";\n\nexport default function buildStore(\n  preloadedState: Parameters<typeof configureStore>[0][\"preloadedState\"] = undefined,\n  disableMiddlewares = false\n) {\n  const epicMiddleware = createEpicMiddleware({\n    dependencies: {\n      observableFetch\n    }\n  });\n\n  const middlewares =\n    process.env.NODE_ENV === \"production\"\n      ? [epicMiddleware]\n      : [\n          ...getDefaultMiddleware({\n            immutableCheck: false,\n            serializableCheck: false,\n            thunk: false\n          }),\n          epicMiddleware\n        ];\n\n  const store = configureStore({\n    reducer: rootReducer,\n    middleware: disableMiddlewares ? [] : middlewares,\n    preloadedState\n  });\n\n  if (!disableMiddlewares) epicMiddleware.run(rootEpic);\n\n  return store;\n}\n"],"sourceRoot":""}