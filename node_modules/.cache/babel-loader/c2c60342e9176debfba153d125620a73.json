{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/dcestari/Documents/projects/react/react-pokeapi/src/containers/PokemonDetails/index.tsx\";\n\nimport React from \"react\";\nimport * as hooks from \"../../hooks/pokemonData\";\nimport PokemonDetailsLayout from \"../../components/PokemonDetailsLayout\";\nimport ResourceState from \"../../components/ResourceState\";\nimport TypePill from \"../../components/PokemonTypePill\";\n\nvar PokemonDetails = function PokemonDetails() {\n  var _pokemonData$species$, _pokemonData$species$2, _pokemonData$species$3, _pokemonData$species$4, _pokemonData$species$5, _pokemonData$species$6, _pokemonData$species$7, _pokemonData$species$8;\n\n  hooks.usePokemonDataEffect();\n  var pokemonData = hooks.usePokemonDataState();\n  var images = pokemonData.data && Object.entries(pokemonData.data.sprites).filter(function (e) {\n    return e[1];\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ResourceState, {\n    state: pokemonData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }), pokemonData.data && /*#__PURE__*/React.createElement(PokemonDetailsLayout, {\n    backgroundImageUrl: images && images[0][1],\n    pokemonName: pokemonData.data.name,\n    pokemonId: pokemonData.data.id,\n    images: /*#__PURE__*/React.createElement(React.Fragment, null, images === null || images === void 0 ? void 0 : images.map(function (e) {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: e[1],\n        alt: e[0],\n        key: e[0],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }\n      });\n    })),\n    color: (_pokemonData$species$ = pokemonData.species.data) === null || _pokemonData$species$ === void 0 ? void 0 : _pokemonData$species$.color.name,\n    types: /*#__PURE__*/React.createElement(React.Fragment, null, pokemonData.data.types.map(function (t) {\n      return /*#__PURE__*/React.createElement(TypePill, {\n        pokemonType: t.type.name,\n        key: t.type.name,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      });\n    })),\n    descriptionTitle: (_pokemonData$species$2 = pokemonData.species.data) === null || _pokemonData$species$2 === void 0 ? void 0 : (_pokemonData$species$3 = _pokemonData$species$2.genera.find(function (g) {\n      return g.language.name === \"en\";\n    })) === null || _pokemonData$species$3 === void 0 ? void 0 : _pokemonData$species$3.genus,\n    description: /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, pokemonData.species.data &&\n    /*\n     * Unfortunatelly, the API results contain repeated data in \"flavor_text_entries\",\n     * varying sometimes in linebreaks or missing spaces between words.\n     * In the block below I try to remove linebreaks and remove duplications\n     */\n    Array.from(pokemonData.species.data.flavor_text_entries.filter(function (i) {\n      return i.language.name === \"en\";\n    }) // Remove linebreaks and invalid chars\n    .map(function (i) {\n      return i.flavor_text.replace(/\\r?\\n|\\r|\\u000c/gm, \" \");\n    }) // eslint-disable-line no-control-regex\n    .reduce(\n    /*\n     * As the text from the API can sometimes vary by missing spaces,\n     * I'm using the first 10 chars to differentiate the texts\n     */\n    function (acc, cur) {\n      return acc.set(cur.toLowerCase().substring(0, 10), cur);\n    }, new Map()).values()).reduce(function (acc, cur, index) {\n      acc.push( /*#__PURE__*/React.createElement(\"span\", {\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      }, acc.length > 0 && /*#__PURE__*/React.createElement(\"br\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 42\n        }\n      }), cur));\n      return acc;\n    }, [])),\n    profile: /*#__PURE__*/React.createElement(\"ul\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, \"Height: \", pokemonData.data.height / 10, \"m\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, \"Weight: \", pokemonData.data.weight / 10, \"kg\"), ((_pokemonData$species$4 = pokemonData.species.data) === null || _pokemonData$species$4 === void 0 ? void 0 : _pokemonData$species$4.shape.name) && /*#__PURE__*/React.createElement(\"li\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, \"Shape: \", (_pokemonData$species$5 = pokemonData.species.data) === null || _pokemonData$species$5 === void 0 ? void 0 : _pokemonData$species$5.shape.name), ((_pokemonData$species$6 = pokemonData.species.data) === null || _pokemonData$species$6 === void 0 ? void 0 : (_pokemonData$species$7 = _pokemonData$species$6.habitat) === null || _pokemonData$species$7 === void 0 ? void 0 : _pokemonData$species$7.name) && /*#__PURE__*/React.createElement(\"li\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, \"Habitat: \", (_pokemonData$species$8 = pokemonData.species.data) === null || _pokemonData$species$8 === void 0 ? void 0 : _pokemonData$species$8.habitat.name)),\n    abilities: /*#__PURE__*/React.createElement(\"ul\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, pokemonData.data.abilities.map(function (a) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: a.ability.name,\n        title: a.is_hidden ? \"Hidden ability\" : \"Normal ability\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }, a.ability.name);\n    })),\n    stats: /*#__PURE__*/React.createElement(\"ul\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, pokemonData.data.stats.map(function (s) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: s.stat.name,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }, s.stat.name, \": \", s.base_stat);\n    })),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default PokemonDetails;","map":{"version":3,"sources":["/home/dcestari/Documents/projects/react/react-pokeapi/src/containers/PokemonDetails/index.tsx"],"names":["React","hooks","PokemonDetailsLayout","ResourceState","TypePill","PokemonDetails","usePokemonDataEffect","pokemonData","usePokemonDataState","images","data","Object","entries","sprites","filter","e","name","id","map","species","color","types","t","type","genera","find","g","language","genus","Array","from","flavor_text_entries","i","flavor_text","replace","reduce","acc","cur","set","toLowerCase","substring","Map","values","index","push","length","height","weight","shape","habitat","abilities","a","ability","is_hidden","stats","s","stat","base_stat"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as hooks from \"../../hooks/pokemonData\";\nimport PokemonDetailsLayout from \"../../components/PokemonDetailsLayout\";\nimport ResourceState from \"../../components/ResourceState\";\nimport TypePill from \"../../components/PokemonTypePill\";\n\nconst PokemonDetails: React.FC = () => {\n  hooks.usePokemonDataEffect();\n  const pokemonData = hooks.usePokemonDataState();\n\n  const images =\n    pokemonData.data && Object.entries(pokemonData.data.sprites).filter(e => e[1]);\n\n  return (\n    <>\n      <ResourceState state={pokemonData} />\n      {pokemonData.data && (\n        <PokemonDetailsLayout\n          backgroundImageUrl={images && images[0][1]}\n          pokemonName={pokemonData.data.name}\n          pokemonId={pokemonData.data.id}\n          images={\n            <>\n              {images?.map(e => (\n                <img src={e[1]} alt={e[0]} key={e[0]} />\n              ))}\n            </>\n          }\n          color={pokemonData.species.data?.color.name}\n          types={\n            <>\n              {pokemonData.data.types.map(t => (\n                <TypePill pokemonType={t.type.name} key={t.type.name} />\n              ))}\n            </>\n          }\n          descriptionTitle={\n            pokemonData.species.data?.genera.find(g => g.language.name === \"en\")?.genus\n          }\n          description={\n            <div>\n              {pokemonData.species.data &&\n                /*\n                 * Unfortunatelly, the API results contain repeated data in \"flavor_text_entries\",\n                 * varying sometimes in linebreaks or missing spaces between words.\n                 * In the block below I try to remove linebreaks and remove duplications\n                 */\n                Array.from(\n                  pokemonData.species.data.flavor_text_entries\n                    .filter(i => i.language.name === \"en\")\n                    // Remove linebreaks and invalid chars\n                    .map(i => i.flavor_text.replace(/\\r?\\n|\\r|\\u000c/gm, \" \")) // eslint-disable-line no-control-regex\n                    .reduce(\n                      /*\n                       * As the text from the API can sometimes vary by missing spaces,\n                       * I'm using the first 10 chars to differentiate the texts\n                       */\n                      (acc, cur) => acc.set(cur.toLowerCase().substring(0, 10), cur),\n                      new Map<string, string>()\n                    )\n                    .values()\n                ).reduce((acc, cur, index) => {\n                  acc.push(\n                    <span key={index}>\n                      {acc.length > 0 && <br />}\n                      {cur}\n                    </span>\n                  );\n                  return acc;\n                }, [] as React.ReactElement[])}\n            </div>\n          }\n          profile={\n            <ul>\n              <li>Height: {pokemonData.data.height / 10}m</li>\n              <li>Weight: {pokemonData.data.weight / 10}kg</li>\n              {pokemonData.species.data?.shape.name && (\n                <li>Shape: {pokemonData.species.data?.shape.name}</li>\n              )}\n              {pokemonData.species.data?.habitat?.name && (\n                <li>Habitat: {pokemonData.species.data?.habitat.name}</li>\n              )}\n            </ul>\n          }\n          abilities={\n            <ul>\n              {pokemonData.data.abilities.map(a => (\n                <li\n                  key={a.ability.name}\n                  title={a.is_hidden ? \"Hidden ability\" : \"Normal ability\"}\n                >\n                  {a.ability.name}\n                </li>\n              ))}\n            </ul>\n          }\n          stats={\n            <ul>\n              {pokemonData.data.stats.map(s => (\n                <li key={s.stat.name}>\n                  {s.stat.name}: {s.base_stat}\n                </li>\n              ))}\n            </ul>\n          }\n        />\n      )}\n    </>\n  );\n};\n\nexport default PokemonDetails;\n"]},"metadata":{},"sourceType":"module"}