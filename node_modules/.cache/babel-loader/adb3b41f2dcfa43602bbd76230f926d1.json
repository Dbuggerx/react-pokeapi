{"ast":null,"code":"import _toConsumableArray from \"/home/dcestari/Documents/projects/react/react-pokeapi/.yarn/cache/@babel-runtime-npm-7.9.0-fa03662500-3.zip/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { createEpicMiddleware } from \"redux-observable\";\nimport rootReducer from \"./rootReducer\";\nimport rootEpic from \"./rootEpic\";\nimport observableFetch from \"./observableFetch\";\nexport default function buildStore() {\n  var preloadedState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n  var disableMiddlewares = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var epicMiddleware = createEpicMiddleware({\n    dependencies: {\n      observableFetch\n    }\n  });\n  var middlewares = process.env.NODE_ENV === \"production\" ? [epicMiddleware] : [].concat(_toConsumableArray(getDefaultMiddleware({\n    immutableCheck: false,\n    serializableCheck: false,\n    thunk: false\n  })), [epicMiddleware]);\n  var store = configureStore({\n    reducer: rootReducer,\n    middleware: disableMiddlewares ? [] : middlewares,\n    preloadedState\n  });\n  if (!disableMiddlewares) epicMiddleware.run(rootEpic);\n  return store;\n}","map":{"version":3,"sources":["/home/dcestari/Documents/projects/react/react-pokeapi/src/redux/store.ts"],"names":["configureStore","getDefaultMiddleware","createEpicMiddleware","rootReducer","rootEpic","observableFetch","buildStore","preloadedState","undefined","disableMiddlewares","epicMiddleware","dependencies","middlewares","process","env","NODE_ENV","immutableCheck","serializableCheck","thunk","store","reducer","middleware","run"],"mappings":";AAAA,SAASA,cAAT,EAAyBC,oBAAzB,QAAqD,kBAArD;AACA,SAASC,oBAAT,QAAqC,kBAArC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,eAAe,SAASC,UAAT,GAGb;AAAA,MAFAC,cAEA,uEAFyEC,SAEzE;AAAA,MADAC,kBACA,uEADqB,KACrB;AACA,MAAMC,cAAc,GAAGR,oBAAoB,CAAC;AAC1CS,IAAAA,YAAY,EAAE;AACZN,MAAAA;AADY;AAD4B,GAAD,CAA3C;AAMA,MAAMO,WAAW,GACfC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GACI,CAACL,cAAD,CADJ,gCAGST,oBAAoB,CAAC;AACtBe,IAAAA,cAAc,EAAE,KADM;AAEtBC,IAAAA,iBAAiB,EAAE,KAFG;AAGtBC,IAAAA,KAAK,EAAE;AAHe,GAAD,CAH7B,IAQMR,cARN,EADF;AAYA,MAAMS,KAAK,GAAGnB,cAAc,CAAC;AAC3BoB,IAAAA,OAAO,EAAEjB,WADkB;AAE3BkB,IAAAA,UAAU,EAAEZ,kBAAkB,GAAG,EAAH,GAAQG,WAFX;AAG3BL,IAAAA;AAH2B,GAAD,CAA5B;AAMA,MAAI,CAACE,kBAAL,EAAyBC,cAAc,CAACY,GAAf,CAAmBlB,QAAnB;AAEzB,SAAOe,KAAP;AACD","sourcesContent":["import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { createEpicMiddleware } from \"redux-observable\";\nimport rootReducer from \"./rootReducer\";\nimport rootEpic from \"./rootEpic\";\nimport observableFetch from \"./observableFetch\";\n\nexport default function buildStore(\n  preloadedState: Parameters<typeof configureStore>[0][\"preloadedState\"] = undefined,\n  disableMiddlewares = false\n) {\n  const epicMiddleware = createEpicMiddleware({\n    dependencies: {\n      observableFetch\n    }\n  });\n\n  const middlewares =\n    process.env.NODE_ENV === \"production\"\n      ? [epicMiddleware]\n      : [\n          ...getDefaultMiddleware({\n            immutableCheck: false,\n            serializableCheck: false,\n            thunk: false\n          }),\n          epicMiddleware\n        ];\n\n  const store = configureStore({\n    reducer: rootReducer,\n    middleware: disableMiddlewares ? [] : middlewares,\n    preloadedState\n  });\n\n  if (!disableMiddlewares) epicMiddleware.run(rootEpic);\n\n  return store;\n}\n"]},"metadata":{},"sourceType":"module"}