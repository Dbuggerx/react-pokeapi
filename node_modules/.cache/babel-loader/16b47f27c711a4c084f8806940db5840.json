{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\nexport function take(count) {\n  return function (source) {\n    if (count === 0) {\n      return empty();\n    } else {\n      return source.lift(new TakeOperator(count));\n    }\n  };\n}\n\nvar TakeOperator = /*@__PURE__*/function () {\n  function TakeOperator(total) {\n    this.total = total;\n\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError();\n    }\n  }\n\n  TakeOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new TakeSubscriber(subscriber, this.total));\n  };\n\n  return TakeOperator;\n}();\n\nvar TakeSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(TakeSubscriber, _super);\n\n  function TakeSubscriber(destination, total) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.total = total;\n    _this.count = 0;\n    return _this;\n  }\n\n  TakeSubscriber.prototype._next = function (value) {\n    var total = this.total;\n    var count = ++this.count;\n\n    if (count <= total) {\n      this.destination.next(value);\n\n      if (count === total) {\n        this.destination.complete();\n        this.unsubscribe();\n      }\n    }\n  };\n\n  return TakeSubscriber;\n}(Subscriber);","map":{"version":3,"sources":["../../../src/internal/operators/take.ts"],"names":[],"mappings":";AACA,OAAO,KAAE,OAAT,MAAqB,OAArB;AACA,SAAS,UAAT,QAAS,eAAT;AACA,SAAS,uBAAT,QAAsB,iCAAtB;AAkDA,SAAM,KAAN,QAAwB,qBAAxB;AACE,OAAA,SAAO,IAAP,CAAQ,KAAR,EAA6B;AAC3B,SAAA,UAAS,MAAT,EAAiB;QACf,KAAA,KAAO,C,EAAK;AACb,aAAA,KAAA,EAAA;AAAM,K,MACL;AACD,aAAA,MAAA,CAAA,IAAA,CAAA,IAAA,YAAA,CAAA,KAAA,CAAA,CAAA;AACD;AACH,GANG;AAQJ;;IACE,YAAA,GAAA,aAAiC,YAAA;AAAb,WAAA,YAAA,CAAK,KAAL,EAAa;AAC/B,SAAI,KAAJ,GAAS,KAAT;;QACE,KAAA,KAAA,GAAU,C,EAAA;AACX,YAAA,IAAA,uBAAA,EAAA;AACF;AAED;;AACE,EAAA,YAAO,CAAA,SAAP,CAAc,IAAd,GAAwB,UAAI,UAAJ,EAAmB,MAAnB,EAA+B;AACxD,WAAA,MAAA,CAAA,SAAA,CAAA,IAAA,cAAA,CAAA,UAAA,EAAA,KAAA,KAAA,CAAA,CAAA;AACH,GAFI;;AAEH,SAAA,YAAA;AAOD,CAhBmC,E;;IAgBH,cAAA,GAAA,aAAA,UAAa,MAAb,EAAa;AAG3C,EAAA,OAAA,CAAA,SAAA,CAAA,cAAA,EAAY,MAAZ;;AAAA,WAAA,cAAA,CACE,WADF,EACQ,KADR,EACQ;AADwC,QAAA,KAAA,GAAA,MAAA,CAAK,IAAL,CAAa,IAAb,EAAa,WAAb,KAAa,IAAb;;AAFxC,IAAA,KAAA,CAAA,KAAA,GAAgB,KAAhB;;AAIP,WAAA,KAAA;AAED;;AACE,EAAA,cAAW,CAAA,SAAX,CAAmB,KAAnB,GAAyB,UAAA,KAAA,EAAA;AACzB,QAAM,KAAK,GAAG,KAAE,KAAhB;AACA,QAAI,KAAK,GAAA,EAAI,KAAK,KAAlB;;QACE,KAAK,IAAA,K,EAAW;AAChB,WAAI,WAAJ,CAAc,IAAd,CAAqB,KAArB;;UACE,KAAK,KAAA,K,EAAY;AACjB,aAAK,WAAL,CAAgB,QAAhB;AACD,aAAA,WAAA;AACF;AACF;AACH,GAVI;;AAR4B,SAAA,cAAA;CAAA,C,UAAA,C","sourcesContent":["/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\nexport function take(count) {\n    return function (source) {\n        if (count === 0) {\n            return empty();\n        }\n        else {\n            return source.lift(new TakeOperator(count));\n        }\n    };\n}\nvar TakeOperator = /*@__PURE__*/ (function () {\n    function TakeOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError;\n        }\n    }\n    TakeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeSubscriber(subscriber, this.total));\n    };\n    return TakeOperator;\n}());\nvar TakeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TakeSubscriber, _super);\n    function TakeSubscriber(destination, total) {\n        var _this = _super.call(this, destination) || this;\n        _this.total = total;\n        _this.count = 0;\n        return _this;\n    }\n    TakeSubscriber.prototype._next = function (value) {\n        var total = this.total;\n        var count = ++this.count;\n        if (count <= total) {\n            this.destination.next(value);\n            if (count === total) {\n                this.destination.complete();\n                this.unsubscribe();\n            }\n        }\n    };\n    return TakeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=take.js.map\n"]},"metadata":{},"sourceType":"module"}