{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_OuterSubscriber,_InnerSubscriber,_util_subscribeToResult,_map,_observable_from PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { map } from './map';\nimport { from } from '../observable/from';\nexport function switchMap(project, resultSelector) {\n  if (typeof resultSelector === 'function') {\n    return function (source) {\n      return source.pipe(switchMap(function (a, i) {\n        return from(project(a, i)).pipe(map(function (b, ii) {\n          return resultSelector(a, b, i, ii);\n        }));\n      }));\n    };\n  }\n\n  return function (source) {\n    return source.lift(new SwitchMapOperator(project));\n  };\n}\n\nvar SwitchMapOperator = /*@__PURE__*/function () {\n  function SwitchMapOperator(project) {\n    this.project = project;\n  }\n\n  SwitchMapOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));\n  };\n\n  return SwitchMapOperator;\n}();\n\nvar SwitchMapSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(SwitchMapSubscriber, _super);\n\n  function SwitchMapSubscriber(destination, project) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.project = project;\n    _this.index = 0;\n    return _this;\n  }\n\n  SwitchMapSubscriber.prototype._next = function (value) {\n    var result;\n    var index = this.index++;\n\n    try {\n      result = this.project(value, index);\n    } catch (error) {\n      this.destination.error(error);\n      return;\n    }\n\n    this._innerSub(result, value, index);\n  };\n\n  SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {\n    var innerSubscription = this.innerSubscription;\n\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n\n    var innerSubscriber = new InnerSubscriber(this, value, index);\n    var destination = this.destination;\n    destination.add(innerSubscriber);\n    this.innerSubscription = subscribeToResult(this, result, undefined, undefined, innerSubscriber);\n\n    if (this.innerSubscription !== innerSubscriber) {\n      destination.add(this.innerSubscription);\n    }\n  };\n\n  SwitchMapSubscriber.prototype._complete = function () {\n    var innerSubscription = this.innerSubscription;\n\n    if (!innerSubscription || innerSubscription.closed) {\n      _super.prototype._complete.call(this);\n    }\n\n    this.unsubscribe();\n  };\n\n  SwitchMapSubscriber.prototype._unsubscribe = function () {\n    this.innerSubscription = null;\n  };\n\n  SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {\n    var destination = this.destination;\n    destination.remove(innerSub);\n    this.innerSubscription = null;\n\n    if (this.isStopped) {\n      _super.prototype._complete.call(this);\n    }\n  };\n\n  SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n    this.destination.next(innerValue);\n  };\n\n  return SwitchMapSubscriber;\n}(OuterSubscriber);","map":{"version":3,"sources":["../../../src/internal/operators/switchMap.ts"],"names":[],"mappings":"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","sourcesContent":["/** PURE_IMPORTS_START tslib,_OuterSubscriber,_InnerSubscriber,_util_subscribeToResult,_map,_observable_from PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { map } from './map';\nimport { from } from '../observable/from';\nexport function switchMap(project, resultSelector) {\n    if (typeof resultSelector === 'function') {\n        return function (source) { return source.pipe(switchMap(function (a, i) { return from(project(a, i)).pipe(map(function (b, ii) { return resultSelector(a, b, i, ii); })); })); };\n    }\n    return function (source) { return source.lift(new SwitchMapOperator(project)); };\n}\nvar SwitchMapOperator = /*@__PURE__*/ (function () {\n    function SwitchMapOperator(project) {\n        this.project = project;\n    }\n    SwitchMapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));\n    };\n    return SwitchMapOperator;\n}());\nvar SwitchMapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SwitchMapSubscriber, _super);\n    function SwitchMapSubscriber(destination, project) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.index = 0;\n        return _this;\n    }\n    SwitchMapSubscriber.prototype._next = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (error) {\n            this.destination.error(error);\n            return;\n        }\n        this._innerSub(result, value, index);\n    };\n    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        var innerSubscriber = new InnerSubscriber(this, value, index);\n        var destination = this.destination;\n        destination.add(innerSubscriber);\n        this.innerSubscription = subscribeToResult(this, result, undefined, undefined, innerSubscriber);\n        if (this.innerSubscription !== innerSubscriber) {\n            destination.add(this.innerSubscription);\n        }\n    };\n    SwitchMapSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.closed) {\n            _super.prototype._complete.call(this);\n        }\n        this.unsubscribe();\n    };\n    SwitchMapSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = null;\n    };\n    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var destination = this.destination;\n        destination.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    return SwitchMapSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=switchMap.js.map\n"]},"metadata":{},"sourceType":"module"}