{"ast":null,"code":"import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { useTypedSelector } from \"../redux/types\";\nimport { actions } from \"../redux/pokemonData\";\nexport function usePokemonDataEffect() {\n  var dispatch = useDispatch();\n\n  var _useParams = useParams(),\n      pokemonName = _useParams.pokemonName;\n\n  React.useEffect(function () {\n    dispatch(actions.fetchData({\n      name: pokemonName.toLowerCase()\n    }));\n  }, [dispatch, pokemonName]);\n}\nexport function usePokemonDataState() {\n  return useTypedSelector(function (state) {\n    return state.pokemonData;\n  });\n}","map":{"version":3,"sources":["/home/dcestari/Documents/projects/react/react-pokeapi/src/hooks/pokemonData.ts"],"names":["React","useDispatch","useParams","useTypedSelector","actions","usePokemonDataEffect","dispatch","pokemonName","useEffect","fetchData","name","toLowerCase","usePokemonDataState","state","pokemonData"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,gBAAT,QAAiC,gBAAjC;AACA,SAASC,OAAT,QAAwB,sBAAxB;AAGA,OAAO,SAASC,oBAAT,GAAgC;AACrC,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;;AADqC,mBAEbC,SAAS,EAFI;AAAA,MAE7BK,WAF6B,cAE7BA,WAF6B;;AAIrCP,EAAAA,KAAK,CAACQ,SAAN,CAAgB,YAAM;AACpBF,IAAAA,QAAQ,CACNF,OAAO,CAACK,SAAR,CAAkB;AAChBC,MAAAA,IAAI,EAAEH,WAAW,CAACI,WAAZ;AADU,KAAlB,CADM,CAAR;AAKD,GAND,EAMG,CAACL,QAAD,EAAWC,WAAX,CANH;AAOD;AAED,OAAO,SAASK,mBAAT,GAA+B;AACpC,SAAOT,gBAAgB,CAAC,UAAAU,KAAK;AAAA,WAAIA,KAAK,CAACC,WAAV;AAAA,GAAN,CAAvB;AACD","sourcesContent":["import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { useTypedSelector } from \"../redux/types\";\nimport { actions } from \"../redux/pokemonData\";\nimport { PokemonRouteParams } from \"../routeManager\";\n\nexport function usePokemonDataEffect() {\n  const dispatch = useDispatch();\n  const { pokemonName } = useParams<PokemonRouteParams>();\n\n  React.useEffect(() => {\n    dispatch(\n      actions.fetchData({\n        name: pokemonName.toLowerCase()\n      })\n    );\n  }, [dispatch, pokemonName]);\n}\n\nexport function usePokemonDataState() {\n  return useTypedSelector(state => state.pokemonData);\n}\n"]},"metadata":{},"sourceType":"module"}