{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from '../Subject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function repeatWhen(notifier) {\n  return function (source) {\n    return source.lift(new RepeatWhenOperator(notifier));\n  };\n}\n\nvar RepeatWhenOperator = /*@__PURE__*/function () {\n  function RepeatWhenOperator(notifier) {\n    this.notifier = notifier;\n  }\n\n  RepeatWhenOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n  };\n\n  return RepeatWhenOperator;\n}();\n\nvar RepeatWhenSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(RepeatWhenSubscriber, _super);\n\n  function RepeatWhenSubscriber(destination, notifier, source) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.notifier = notifier;\n    _this.source = source;\n    _this.sourceIsBeingSubscribedTo = true;\n    return _this;\n  }\n\n  RepeatWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n    this.sourceIsBeingSubscribedTo = true;\n    this.source.subscribe(this);\n  };\n\n  RepeatWhenSubscriber.prototype.notifyComplete = function (innerSub) {\n    if (this.sourceIsBeingSubscribedTo === false) {\n      return _super.prototype.complete.call(this);\n    }\n  };\n\n  RepeatWhenSubscriber.prototype.complete = function () {\n    this.sourceIsBeingSubscribedTo = false;\n\n    if (!this.isStopped) {\n      if (!this.retries) {\n        this.subscribeToRetries();\n      }\n\n      if (!this.retriesSubscription || this.retriesSubscription.closed) {\n        return _super.prototype.complete.call(this);\n      }\n\n      this._unsubscribeAndRecycle();\n\n      this.notifications.next();\n    }\n  };\n\n  RepeatWhenSubscriber.prototype._unsubscribe = function () {\n    var _a = this,\n        notifications = _a.notifications,\n        retriesSubscription = _a.retriesSubscription;\n\n    if (notifications) {\n      notifications.unsubscribe();\n      this.notifications = null;\n    }\n\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = null;\n    }\n\n    this.retries = null;\n  };\n\n  RepeatWhenSubscriber.prototype._unsubscribeAndRecycle = function () {\n    var _unsubscribe = this._unsubscribe;\n    this._unsubscribe = null;\n\n    _super.prototype._unsubscribeAndRecycle.call(this);\n\n    this._unsubscribe = _unsubscribe;\n    return this;\n  };\n\n  RepeatWhenSubscriber.prototype.subscribeToRetries = function () {\n    this.notifications = new Subject();\n    var retries;\n\n    try {\n      var notifier = this.notifier;\n      retries = notifier(this.notifications);\n    } catch (e) {\n      return _super.prototype.complete.call(this);\n    }\n\n    this.retries = retries;\n    this.retriesSubscription = subscribeToResult(this, retries);\n  };\n\n  return RepeatWhenSubscriber;\n}(OuterSubscriber);","map":{"version":3,"sources":["../../../src/internal/operators/repeatWhen.ts"],"names":[],"mappings":"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","sourcesContent":["/** PURE_IMPORTS_START tslib,_Subject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from '../Subject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function repeatWhen(notifier) {\n    return function (source) { return source.lift(new RepeatWhenOperator(notifier)); };\n}\nvar RepeatWhenOperator = /*@__PURE__*/ (function () {\n    function RepeatWhenOperator(notifier) {\n        this.notifier = notifier;\n    }\n    RepeatWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n    };\n    return RepeatWhenOperator;\n}());\nvar RepeatWhenSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RepeatWhenSubscriber, _super);\n    function RepeatWhenSubscriber(destination, notifier, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.notifier = notifier;\n        _this.source = source;\n        _this.sourceIsBeingSubscribedTo = true;\n        return _this;\n    }\n    RepeatWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.sourceIsBeingSubscribedTo = true;\n        this.source.subscribe(this);\n    };\n    RepeatWhenSubscriber.prototype.notifyComplete = function (innerSub) {\n        if (this.sourceIsBeingSubscribedTo === false) {\n            return _super.prototype.complete.call(this);\n        }\n    };\n    RepeatWhenSubscriber.prototype.complete = function () {\n        this.sourceIsBeingSubscribedTo = false;\n        if (!this.isStopped) {\n            if (!this.retries) {\n                this.subscribeToRetries();\n            }\n            if (!this.retriesSubscription || this.retriesSubscription.closed) {\n                return _super.prototype.complete.call(this);\n            }\n            this._unsubscribeAndRecycle();\n            this.notifications.next();\n        }\n    };\n    RepeatWhenSubscriber.prototype._unsubscribe = function () {\n        var _a = this, notifications = _a.notifications, retriesSubscription = _a.retriesSubscription;\n        if (notifications) {\n            notifications.unsubscribe();\n            this.notifications = null;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = null;\n        }\n        this.retries = null;\n    };\n    RepeatWhenSubscriber.prototype._unsubscribeAndRecycle = function () {\n        var _unsubscribe = this._unsubscribe;\n        this._unsubscribe = null;\n        _super.prototype._unsubscribeAndRecycle.call(this);\n        this._unsubscribe = _unsubscribe;\n        return this;\n    };\n    RepeatWhenSubscriber.prototype.subscribeToRetries = function () {\n        this.notifications = new Subject();\n        var retries;\n        try {\n            var notifier = this.notifier;\n            retries = notifier(this.notifications);\n        }\n        catch (e) {\n            return _super.prototype.complete.call(this);\n        }\n        this.retries = retries;\n        this.retriesSubscription = subscribeToResult(this, retries);\n    };\n    return RepeatWhenSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=repeatWhen.js.map\n"]},"metadata":{},"sourceType":"module"}